/* ORGanizer for Salesforce - v10000.0.9.53 
 * Author: Enrico Murru (https://organizer.solutions/)
 * Copyright 2016-2024
 */
!function(exports,global){define("backup-connector",["global","constants","jquery","popup-utils","crypto","lz-string","salesforce-client"],function($G,$C,$,PopupUtils,CryptoJS,LZString,$SalesforceClient){var _apiLevel,_errorHandler,_currentAuthToken,_keyRequestHandler,_loadingHandler,_currentBackupLogins,_selectedLoginsHandler,debug=PopupUtils.newDebugger("Backup-Connector"),BackupConnector={},_init=!1,_logins=[],_rootPanel=$('<div class="ui-bkp-con-container"/>'),_slcLogins=$('<select class="form-control"/>'),_validateConnectionBtn=$('<button class="btn btn-warning">Open Connection</button>'),_getBackupsBtn=$('<button class="btn btn-primary">Load Backups List</button>'),_backupsTable=$('<table class="table table-striped table-hover table-condensed"/>'),_backupResultTable=$('<table class="table table-hover table-condensed"/>'),_groupSelect=$('<select class="form-control"/>'),_importBackupsBtn=$('<button class="btn btn-primary" disabled="disabled">Import Logins</button>'),section1=$('<div class="row"><div class="col-sm-8"><h4>1. Select a login to initiate a connection with the ORGanizer Connector app</h4></div><div class="col-sm-6 ui-left"/><div class="col-sm-2 ui-right"/></div>');section1.find(".ui-left").append(_slcLogins),section1.find(".ui-right").append(_validateConnectionBtn),_rootPanel.append(section1);var section2=$('<div class="row"><br/><br/><div class="col-sm-8"><h4>2. Select a package</h4></div> <div class="col-sm-10 ui-left"/></div>');section2.find(".ui-left").append(_backupsTable),_rootPanel.append(section2);var section3=$('<div><br/><br/><div class="row"><div class="col-sm-8"><h4>3. Select the logins you want to import locally and a group from the list</h4></div> <div class=" col-sm-8 ui-logins"/> <div class=" col-sm-8 ui-action"/></div></div>');section3.find(".ui-logins").append(_backupResultTable);var importDiv=$('<div class="row"><br/><br/><div class="col-sm-6 ui-left"/><div class="col-sm-2 ui-right"/></div>');importDiv.find(".ui-left").append(_groupSelect),importDiv.find(".ui-right").append(_importBackupsBtn),section3.append(importDiv),_rootPanel.append(section3);var section4=$('<div><br/><br/><div class="row"><div class="col-sm-8"><p>Imported logins will replace local logins with the same username. Imported logins are automatically flagged as "not synced".</p></div>');_rootPanel.append(section4),section2.hide(),section3.hide(),_getBackupsBtn.attr("disabled",!0);var authenticate=function(login,callback){_currentAuthToken=null,_getBackupsBtn.attr("disabled",!0),_backupsTable.html(""),_backupResultTable.html("");var landingPage;if(section3.hide(),Number.isInteger(parseInt(login.r))&&(url=PopupUtils.StandardLoginURLs[parseInt(login.r)]),url||(url=PopupUtils.StandardLoginURLs[0]),Number.isInteger(parseInt(login.lp))&&(landingPage=PopupUtils.StandardLandingPages[parseInt(login.lp)]),landingPage||(landingPage=PopupUtils.StandardLandingPages[2]),login.lo)PopupUtils.getOAuthTokenData(login.u,url,landingPage,!0,function(err,token){if(err)return callback&&callback(new Error("Login with OAuth needs to be refreshed. Login with "+login.u+" on the ORGanizer popup page and then refresh this page."));var authToken={sessionId:token.access_token,serverUrl:token.instance_url};return callback&&callback(null,authToken)});else{var sfClient=new $SalesforceClient.Client(url,null,_apiLevel);sfClient.soapLogin(login.u,login.p,login.t,function(err,loginResult){if(err)return callback&&callback(new Error("Error logging in with user "+login.u+" ["+err+"]"));var authToken={sessionId:loginResult.sessionId,serverUrl:loginResult.serverUrl.split("/services")[0]};return callback&&callback(null,authToken)})}},testConnection=function(authToken,callback){var url=authToken.serverUrl+"/"+$C.Endpoints.BackupApp.EchoUrl,options={type:"GET",cache:!1,url:url,headers:{Authorization:"Bearer "+authToken.sessionId},success:function(data,textStatus,request){try{data=JSON.parse(data||"{}")}catch(ex){debug.error("Invalid response:[ "+data+" ]")}return data.success?(_currentAuthToken=authToken,_getBackupsBtn.attr("disabled",!1),callback&&callback()):callback&&callback("Invalid response: "+data)},error:function(request,textStatus,errorThrown){if(debug.error(textStatus,errorThrown),404==request.status)return callback&&callback(new Error("No ORGanizer Connector app seems to be installed in the given org. Check if the package has been succesfully installed"));if(400==request.status)return callback&&callback(new Error("User may not have access to the ORGanizer Connector services."));if(request&&request.responseText){var msg=request.responseText;try{request.responseText=JSON.parse(request.responseText),request.responseText=request.responseText[0].message}catch(ex){request.responseText=msg}return callback&&callback(request.responseText)}return callback&&callback(textStatus)}};PopupUtils.ajaxCall(options)},getBackups=function(authToken,callback){var url=authToken.serverUrl+"/"+$C.Endpoints.BackupApp.GetBackupsUrl,options={type:"GET",cache:!1,url:url,headers:{Authorization:"Bearer "+authToken.sessionId},success:function(data,textStatus,request){try{data=JSON.parse(data||"{}")}catch(ex){debug.error("Invalid response:[ "+data+" ]")}return data.success?callback&&callback(null,data):callback&&callback(data.message)},error:function(request,textStatus,errorThrown){if(debug.error(textStatus,errorThrown),404==request.status)return callback&&callback(new Error("No ORGanizer Connector app seems to be installed in the given org. Check if the package has been succesfully installed"));if(400==request.status)return callback&&callback(new Error("User may not have access to the ORGanizer Connector services."));if(request&&request.responseText){var msg=request.responseText;try{request.responseText=JSON.parse(request.responseText),request.responseText=request.responseText[0].message}catch(ex){request.responseText=msg}return callback&&callback(request.responseText)}return callback&&callback(textStatus)}};PopupUtils.ajaxCall(options)},getBackup=function(authToken,backupid,sfSecret,callback){var url=authToken.serverUrl+"/"+$C.Endpoints.BackupApp.GetBackupsUrl+"/"+backupid,options={type:"GET",cache:!1,url:url,headers:{Authorization:"Bearer "+authToken.sessionId,"organizer-authentication":PopupUtils.encryptForSalesforce(backupid,sfSecret)},success:function(data,textStatus,request){try{data=JSON.parse(data||"{}")}catch(ex){debug.error("Invalid response:[ "+data+" ]")}return data.success?callback&&callback(null,data):callback&&callback(data.message)},error:function(request,textStatus,errorThrown){if(debug.error(textStatus,errorThrown),404==request.status)return callback&&callback(new Error("No ORGanizer Connector app seems to be installed in the given org. Check if the package has been succesfully installed"));if(400==request.status)return callback&&callback(new Error("User may not have access to the ORGanizer Connector services."));if(request&&request.responseText){var msg=request.responseText;try{request.responseText=JSON.parse(request.responseText),request.responseText=request.responseText[0].message}catch(ex){request.responseText=msg}return callback&&callback(request.responseText)}return callback&&callback(textStatus)}};PopupUtils.ajaxCall(options)},drawBackup=function(backupResult){_backupResultTable.html(""),section3.show();var thead=$("<thead><th/><th>Name</th><th>Username</th></thead>"),tbody=$("<tbody></tbody>");_backupResultTable.append(thead),_backupResultTable.append(tbody);for(var i=0;i<backupResult.result.items.length;i++){var backup=backupResult.result.items[i],tr=$("<tr>").attr("data-item-id",backup.id),tdName=$("<td/>").text(backup.name),tdUsername=$("<td/>").text(backup.username),tdCheck=$("<td/>"),checkLogin=$('<input type="checkbox" class="ui-check-login" />');checkLogin.click(function(){_backupResultTable.find('input[type="checkbox"].ui-check-login:checked').length>0?_importBackupsBtn.attr("disabled",!1):_importBackupsBtn.attr("disabled",!0)}),tdCheck.append(checkLogin),tr.append(tdCheck).append(tdName).append(tdUsername),tbody.append(tr)}},drawBackups=function(backups){_backupResultTable.html(""),_backupsTable.html(""),section3.hide(),section2.show();var thead=$("<thead><th>Name</th><th>Description</th><th>Logins count</th><th>Shared</th><th/></thead>"),tbody=$("<tbody></tbody>");_backupsTable.append(thead),_backupsTable.append(tbody);for(var i=0;i<backups.result.items.length;i++){var backup=backups.result.items[i],tr=$("<tr>").attr("data-item-id",backup.id).attr("data-item-name",backup.name),tdName=$("<td/>").text(backup.name),tdDescription=$("<td/>").text(backup.description),tdCount=$("<td/>").text(backup.count),tdShared=$("<td/>").html(backup.shared?'<span class="fa fa-check"></span>':"No"),tdAction=$("<td/>"),getBackupBtn=$('<button class="btn btn-default btn-xs">Get Backup</button>');backup.count&&tdAction.append(getBackupBtn),getBackupBtn.click(function(){var backupid=$(this).closest("tr").attr("data-item-id"),backupName=$(this).closest("tr").attr("data-item-name");_keyRequestHandler(function(result,backupKey){result&&(_loadingHandler("Loading logins list..."),getBackup(_currentAuthToken,backupid,backupKey,function(err,rslt){return _loadingHandler(),err?_errorHandler(err):(_backupsTable.find("tr").removeClass("info"),_backupsTable.find('tr[data-item-id="'+backupid+'"]').addClass("info"),_currentBackupLogins=rslt.result.items||[],_groupSelect.find("option:first").val(backupName).text("-- Use package's name ("+backupName+") --"),void drawBackup(rslt))}))})}),tr.append(tdName).append(tdDescription).append(tdCount).append(tdShared).append(tdAction),tbody.append(tr)}};return _validateConnectionBtn.click(function(){var selOpt=_slcLogins.find("option:selected"),index=selOpt.attr("data-index");if(!index&&"0"!==index)return _errorHandler("No login selected [1]");var login=_logins[parseInt(index)];return login?(_loadingHandler("Validating connection..."),void authenticate(login,function(err,token){return err?(_loadingHandler(),_errorHandler(err)):void testConnection(token,function(err){return _loadingHandler(),err?_errorHandler(err):void _getBackupsBtn.click()})})):_errorHandler("No login selected [2]")}),_getBackupsBtn.click(function(){return _currentAuthToken?(_loadingHandler("Loading backups from ORGanizer Connector..."),void getBackups(_currentAuthToken,function(err,backups){return _loadingHandler(),err?_errorHandler(err):void drawBackups(backups)})):_errorHandler("No connection enstablished. Select a login and test connection first.")}),_importBackupsBtn.click(function(){var importBackupsList=[];return _backupResultTable.find('input[type="checkbox"].ui-check-login:checked').each(function(){var itemId=$(this).closest("tr").attr("data-item-id");importBackupsList.push(itemId)}),importBackupsList.length?void _keyRequestHandler(function(result,backupKey){if(result){for(var importedLogins=[],j=0;j<importBackupsList.length;j++)for(var id=importBackupsList[j],i=0;i<_currentBackupLogins.length;i++){var l=_currentBackupLogins[i];if(l.id===id){var tmp=JSON.parse(JSON.stringify(l));if(tmp.token){try{tmp.token=PopupUtils.decryptFromSalesforce(tmp.token,backupKey)}catch(ex){debug.error(ex),tmp.token=null}if(!tmp.token)return _errorHandler("Invalid backup's key. Retry.")}try{tmp.password=PopupUtils.decryptFromSalesforce(tmp.password,backupKey)}catch(ex){debug.error(ex),tmp.password=null}if(!tmp.password)return _errorHandler("Invalid backup's key. Retry.");var l={s:!1,lo:!1,lt:!1,p:tmp.password,u:tmp.username,t:tmp.token,n:tmp.name,lp:"0",r:PopupUtils.StandardLoginURLs.indexOf(tmp.loginUrl)>=0?""+PopupUtils.StandardLoginURLs.indexOf(tmp.loginUrl):tmp.loginUrl,g:_groupSelect.val()||"** IMPORTED **",d:(new Date).getTime()};importedLogins.push(l);break}}return _selectedLoginsHandler(importedLogins)}}):_errorHandler("No login selected.")}),BackupConnector.getRootElement=function(){return _rootPanel},BackupConnector.init=function(options){if(_init)return _rootPanel;if(!options)return debug.error("Invalid options [1]");if(!options.logins)return debug.error("Invalid logins [2]");_apiLevel=options.apiLevel||$C.SF_API.LEVEL,_logins=options.logins||[],_errorHandler=options.errorHandler||debug.error,_keyRequestHandler=options.keyRequestHandler||debug.log,_loadingHandler=options.loadingHandler||debug.log,_selectedLoginsHandler=options.selectedLoginsHandler||debug.log,_init=!0,_slcLogins.append($('<option value="">-- Select a login --</options>')),_groupSelect.append($('<option value="">Use package\'s name</option>'));for(var optionGroup=null,groupName=null,i=0;i<_logins.length;i++){groupName!==_logins[i].g&&(groupName=_logins[i].g,_groupSelect.append($("<option />").text(groupName)),optionGroup=$('<optgroup label=""/>').attr("label",groupName),_slcLogins.append(optionGroup));var opt=$("<option/>");opt.text(_logins[i].n+" ("+_logins[i].u+")"),opt.val(_logins[i].u),opt.attr("data-index",i),optionGroup.append(opt)}return _rootPanel},BackupConnector}),global.true=exports}({},function(){return this}());