/*    
	-- Content Feedback - Overview on Browse and News pages - CCISUPGR-1551,CCISUPGR-1552 & CCISUPGR-1553   05/17/2021  Rajendhiran Muthusamy
	-- Content feedback - NO  submission issue CCISUPGR-2062   09/28/2021  Rajendhiran Muthusamy
*/
var FeedBackCONST = {
	CONFIG : function(name){
		var APIS= {
			"ListName" : "Feedback",
			"AddItemAPI" : "/_api/web/lists/getbytitle('{{List}}')/items",
			"UpdateItemAPI" : "/_api/web/lists/getbytitle('{{List}}')/items({{ItemId}})",
			"Metadata" : "SP.Data.FeedbackListItem",
			"FieldAPI" : "/_api/web/lists/getbytitle('{{List}}')/fields?$filter=EntityPropertyName eq '{{FieldNameYes}}' or EntityPropertyName eq '{{FieldNameNo}}'",
			"YesReasonField" : "YesReason",
			"NoReasonField" : "NoReason"
		}
		return APIS[name];
	},
	FeedBackID : function(name){
		var IDs = {
			"GiveFeedBack" : "SR_FeedbackRequest",
			"AsideFeedBackPopup" : "SR_FeedbackRequest_ModalPopup",
			"FeedBackPopupBtn" : "Btn_FeedbackRequest_ModalPopup",
			"FeedBackModalCommentsYes" : "Feedback_Modal_Yes_Additional_Comments",
			"FeedBackModalCommentsNo" : "Feedback_Modal_No_Additional_Comments",
			"FeedBackRequstYes" : "Btn_FeedbackRequest_Yes",
			"FeedBackRequstNo" : "Btn_FeedbackRequest_No",
			"FeedBackSubmitYes" : "Btn_FeedbackModal_Yes_Submit",
			"FeedBackSubmitNo" : "Btn_FeedbackModal_No_Submit",
			"FeedBackItemHiddenField" : "FeedbackItem",
		}
		return IDs[name]
	}
}

var feedBackItemID = '';

function ExecuteJsonFeedBack(options) {
    var headers = options.headers || {};
    headers["Accept"] = "application/json;odata=verbose";
    if (options.method == "POST") {
        headers["X-RequestDigest"] = jQuery("#__REQUESTDIGEST").val();
    }

    var ajaxOptions =
    {
        url: options.url,
        type: options.method,
        contentType: "application/json;odata=verbose",
        headers: headers
    };
    if (options.method == "POST") {
        ajaxOptions["data"] = JSON.stringify(options.payload);
    }
    return jQuery.ajax(ajaxOptions);
}

//Update item in list
function UpdateFeedBackItem(webApiUrl, itemPayload) {
    var options = {
        url: webApiUrl,
        method: "POST",
        headers: {
            "X-HTTP-Method": "MERGE",
            "If-Match": "*"
        },
        payload: itemPayload
    };
    return ExecuteJsonFeedBack(options);
}

//Add feedback information in FeedBack list
function CreateItem(webUrl,listTitle){
	try{
		var listApi = webUrl + FeedBackCONST.CONFIG("AddItemAPI").replace("{{List}}",listTitle);
		var metadataType = FeedBackCONST.CONFIG("Metadata"); //'SP.Data.FeedbackListItem';
		var contentHelpful = {"__metadata":{"type":"Collection(Edm.String)"},"results":["Yes"]};
		
		var itemProperties = {
				"__metadata":
					{
						'type':metadataType
					},
				"Title": window.location.href,
				'ContentHelpful': contentHelpful
			};
			
		var options = {
			url: listApi,
			method: "POST",
			headers: {
				"X-HTTP-Method": "POST",
			},
			payload: itemProperties
		};
	}
	catch(ex){
		cgiError.LogError("Error: Error to createItem main in IntranetFeedback.js: CreateItem()", JSON.stringify(ex));
	}
    return ExecuteJsonFeedBack(options);
}

function UpdateFeedBack(itemId){
	try{
		var webUrl = _spPageContextInfo.siteAbsoluteUrl;
		var listTitle = FeedBackCONST.CONFIG("ListName");
		var reasonData = [];
		var commentsData = '';
		var inputElements = document.getElementsByClassName('form-check-input Yes');
		
		$.each(inputElements,function(index,inputElement){
			try{
				if(inputElement.checked){
					reasonData.push(inputElement.value);
				}
			}
			catch(e){
				cgiError.LogError("Error: Error occurrec to get the checkbox values in IntranetFeedback.js: UpdateFeedBack()", JSON.stringify(e));
			}
		});
		
		var commentsElement = document.getElementById(FeedBackCONST.FeedBackID("FeedBackModalCommentsYes"));
		if(commentsElement != undefined){
			commentsData = commentsElement.value;
		}
		
		var updateItemApi = webUrl + FeedBackCONST.CONFIG("UpdateItemAPI").replace("{{List}}",listTitle).replace("{{ItemId}}",itemId);
		var metadataType = FeedBackCONST.CONFIG("Metadata");
		
		//var yesReason = {"__metadata":{"type":"Collection(Edm.String)"},"results":["Accuracy"]};
		var reasonChoiceData = {"__metadata":{"type":"Collection(Edm.String)"},"results":reasonData};
		
		var itemProperties = {
				"__metadata":
					{
						'type':metadataType
					},
				"YesReason": reasonChoiceData,
				"YesComments": commentsData
			};
		
		var updateInfo = $.Deferred();
		UpdateFeedBackItem(updateItemApi,itemProperties).done(function(updateResponse){
			updateInfo.resolve(updateResponse);
			//Clear the values once done
			ClearInputReasons();
			var asideFeedBackPopup = document.getElementById(FeedBackCONST.FeedBackID("AsideFeedBackPopup"));
			var btnGiveFeedBack = document.getElementById(FeedBackCONST.FeedBackID("GiveFeedBack"));
			asideFeedBackPopup.style.display = "none";
			btnGiveFeedBack.style.display = "block";
		}).fail(function(jqXHR,textStatus){
			cgiError.LogError("Error:Update feedback item issue IntranetFeedback.js: UpdateFeedBack() ajax call", JSON.stringify(jqXHR));
			ClearInputReasons();
		}).always(function(){
			cgiError.LogError("Info:Complete update feedback item IntranetFeedback.js: UpdateFeedBack() ajax call", "success");
		})
	}
	catch(ex){
		cgiError.LogError("Error: Error occurrec to update feedback in IntranetFeedback.js: UpdateFeedBack()", JSON.stringify(ex));
	}
}

function CreateFeedBackWithNo(){
	try{
		var listApi = _spPageContextInfo.siteAbsoluteUrl + FeedBackCONST.CONFIG("AddItemAPI").replace("{{List}}",FeedBackCONST.CONFIG("ListName"));
		var metadataType = FeedBackCONST.CONFIG("Metadata"); //'SP.Data.FeedbackListItem';
		var contentHelpful = {"__metadata":{"type":"Collection(Edm.String)"},"results":["No"]};
		var inputElements = document.getElementsByClassName('form-check-input No');
		var reasonData = [];
		var commentsData = '';
		$.each(inputElements,function(index,inputElement){
			try{
				if(inputElement.checked){
					reasonData.push(inputElement.value);
				}
			}
			catch(e){
				cgiError.LogError("Error: Error occurrec to get the checkbox values in IntranetFeedback.js: CreateFeedBackWithNo()", JSON.stringify(e));
			}
		});
		var commentsElement = document.getElementById(FeedBackCONST.FeedBackID("FeedBackModalCommentsNo"));
		if(commentsElement != undefined){
			commentsData = commentsElement.value;
		}
		var reasonChoiceData = {"__metadata":{"type":"Collection(Edm.String)"},"results":reasonData};
		
		var itemProperties = {
				"__metadata":
					{
						'type':metadataType
					},
				"Title": window.location.href,
				"ContentHelpful": contentHelpful,
				"NoReason": reasonChoiceData,
				"NoComments": commentsData
			};
		
		var options = {
			url: listApi,
			method: "POST",
			headers: {
				"X-HTTP-Method": "POST",
			},
			payload: itemProperties
		};
	}
	catch(ex){
		cgiError.LogError("Error: Error to CreateFeedBackWithNo main in IntranetFeedback.js: CreateFeedBackWithNo()", JSON.stringify(ex));
	}
    return ExecuteJsonFeedBack(options);
}

function ClearInputReasons(){
	try{
		var inputElements = document.getElementsByClassName('form-check-input');
		$.each(inputElements,function(index,inputElement){
			try{
				inputElement.checked = false;
			}
			catch(e){
				cgiError.LogError("Error: update the choice value to False IntranetFeedback.js: ClearInputReasons()", JSON.stringify(e));
			}
		});
		var commentsYes = document.getElementById(FeedBackCONST.FeedBackID("FeedBackModalCommentsYes"))
		if(commentsYes != undefined){
			commentsYes.value = '';
		}
		var commentsNo = document.getElementById(FeedBackCONST.FeedBackID("FeedBackModalCommentsNo"))
		if(commentsNo != undefined){
			commentsNo.value = '';
		}
		var cancelBtn = document.getElementById(FeedBackCONST.FeedBackID("FeedBackSubmitNo"));
		if(cancelBtn != undefined){
			cancelBtn.disabled = true;
		}
	}
	catch(ex){
		cgiError.LogError("Error: Update input choice value checke to False IntranetFeedback.js: ClearInputReasons()", JSON.stringify(ex));
	}
}

function AddFeedBackInfo(){
	try{
		var webUrl = _spPageContextInfo.siteAbsoluteUrl;
		var listTitle = FeedBackCONST.CONFIG("ListName");
		
		var feedBackItemHiddenFld = document.getElementById(FeedBackCONST.FeedBackID("FeedBackItemHiddenField"));
		var getFeedBackInfo = $.Deferred();
		CreateItem(webUrl,listTitle).done(function (response) {
			getFeedBackInfo.resolve(response);
			feedBackItemID = response.d.ID;
			if(feedBackItemHiddenFld != undefined){
				feedBackItemHiddenFld.value = feedBackItemID;
			}
		}).fail(function(jqXHR, textStatus){
			cgiError.LogError("Error:Create feedback item IntranetFeedback.js: AddFeedBackInfo() ajax call", JSON.stringify(jqXHR));
		}).always(function(){
			cgiError.LogError("Info:Complete create feedback item IntranetFeedback.js: AddFeedBackInfo() ajax call", "success");
		});
		//Clear the input checkbox checked
		ClearInputReasons();
	}
	catch(ex){
		cgiError.LogError("Error: Error to create feedback item in IntranetFeedback.js: CreateListItem()", JSON.stringify(ex));
	}
}

function GetFeedBackInfo() {
  try{
	
	var feedBackInfoAPI = "/_api/web/Lists/GetByTitle('Feedback')/items?$select=Id,ContentHelpful,YesReason,YesComments";
	var getMoreInfo = $.Deferred();
	var listItems = getListItems.getRequest(feedBackInfoAPI,true);
	listItems.done(function (response) {
		getMoreInfo.resolve(response);
		var feedBackResults = response.d.results;
		if(feedBackResults.length > 0) {
			$.each(feedBackResults,function (index,item) {
				if(item.ContentHelpful != undefined && item.ContentHelpful != null){
					if(item.ContentHelpful.length > 0){
						contentAvail = true;
						return false;
					}
				}
			});
		}
	})
  }
  catch(ex){
	  cgiError.LogError("Error: Error in get feedback information IntranetFeedback.js: GetFeedBackInfo()", JSON.stringify(ex));
   }
}

function BindYesandNoData(){
	try{
		var reasonFieldApi = FeedBackCONST.CONFIG("FieldAPI").replace("{{List}}",FeedBackCONST.CONFIG("ListName")).replace("{{FieldNameYes}}",FeedBackCONST.CONFIG("YesReasonField")).replace("{{FieldNameNo}}",FeedBackCONST.CONFIG("NoReasonField"));
		
		var introHtml = '<p class="lead font-family-sans-serif mb-3 text-body" id="Label_FeedbackModal_Yes_Intro">What did you like about this content?</p>'
		var choiceHtml = '<div class="form-group form-check">\
								<input type="checkbox" class="form-check-input {{Reason}}" id="Feedback-Modal-{{Reason}}-{{ChoiceFieldValue}}" value="{{ChoiceFieldValue}}" onchange="FeedBackCommentsChange()">\
								<label class="form-check-label" for="Feedback-Modal-{{Reason}}-{{ChoiceFieldValue}}">\
									<strong id="Label_FeedbackModal_{{Reason}}_{{ChoiceFieldValue}}">Choice</strong>\
									 <br />\
                                <span id="Label_FeedbackModal_{{Reason}}_{{ChoiceFieldValue}}_Info">The content should be easier to follow</span>\
								</label>\
						</div>'
		//Get the Field Properties
		var getYesReasonInfo = $.Deferred();
		var listFields = getListItems.getRequest(reasonFieldApi,true);
		listFields.done(function (response) {
			getYesReasonInfo.resolve(response);
			var choiceFields = response.d.results;
			response.d.results[0].Choices.results
			var yesReasonHtml = '';
			var noReasonHtml = ''
			if(choiceFields.length > 0){
				$.each(choiceFields,function (index,choiceField) {
					var choiceFieldName = choiceField.EntityPropertyName;
					try{
						var choiceValues = choiceField.Choices.results;
						if(choiceValues.length > 0){
							$.each(choiceValues,function(choiceIndex,value){
								var reasonData = choiceHtml;
								try{
									if(choiceFieldName == FeedBackCONST.CONFIG("YesReasonField")){
										yesReasonHtml += reasonData.replace(/{{ChoiceFieldValue}}/g,value).replace(/{{Reason}}/g,"Yes")
									}
									else if(choiceFieldName == FeedBackCONST.CONFIG("NoReasonField")){
										noReasonHtml += reasonData.replace(/{{ChoiceFieldValue}}/g,value).replace(/{{Reason}}/g,"No")
									}
								}
								catch(ex){
									cgiError.LogError("Error: Error to get choice field BindYesandNoData.js: BindYesandNoData()", JSON.stringify(ex));
								}
							});
						}
					}
					catch(ex){
						cgiError.LogError("Error: Error to get choice field BindYesandNoData.js: BindYesandNoData()", JSON.stringify(ex));
					}
				});
			}
			if(yesReasonHtml.length > 0){
				var orgYesHtml = introHtml + yesReasonHtml
				orgYesHtml = orgYesHtml.trim();
				var appendHtml = orgYesHtml + $('#Feedback-Modal-Yes-Div').html();
				$('#Feedback-Modal-Yes-Div').html(appendHtml);
			}
			if(noReasonHtml.length > 0){
				noReasonHtml = noReasonHtml.trim();
				var htmlData = noReasonHtml + $('#Feedback-Modal-No-Div').html();
				$('#Feedback-Modal-No-Div').html(htmlData);
			}
			BindGlobalLabels();
		})
	}
	catch(ex){
		cgiError.LogError("Error: Error to createItem main in BindYesandNoData.js: CreateItem()", JSON.stringify(ex));
	}
}

function FeedBackCommentsChange(){
	try{
		var cancelBtn = document.getElementById(FeedBackCONST.FeedBackID("FeedBackSubmitNo"));
		var commentsElement = document.getElementById(FeedBackCONST.FeedBackID("FeedBackModalCommentsNo"));
		var checkBoxChecked = false;
		var commentsHasValue = false;
		if(event.target.type == "checkbox" && event.target.className == "form-check-input No"){
			if(event.target.checked){
				checkBoxChecked = true;
		
				if(commentsElement != undefined){
					if(commentsElement.value.trim() != ''){
						commentsHasValue = true;
					}
				}
			}
			else{
				//Iterate all checkboxes and comments textbox and show based on value
				var inputElements = document.getElementsByClassName('form-check-input No');
				$.each(inputElements,function(index,inputElement){
					try{
						if(inputElement.checked){
							checkBoxChecked = true;
						}
					}
				    catch(e){
					 cgiError.LogError("Error: Error occurrec to get the checkbox values in IntranetFeedback.js: FeedBackCommentsChange()", JSON.stringify(e));
					}
				});
			
				if(commentsElement != undefined){
					if(commentsElement.value.trim() != ''){
						commentsHasValue = true;
					}
				}
			}
		}
		else if(event.target.type == "text" && event.target.id == FeedBackCONST.FeedBackID("FeedBackModalCommentsNo")){
			if(event.target.value.trim() != ''){
				commentsHasValue = true;
				
				//Iterate all checkboxes and comments textbox and show based on value
				var inputElements = document.getElementsByClassName('form-check-input No');
				$.each(inputElements,function(index,inputElement){
					try{
						if(inputElement.checked){
							checkBoxChecked = true;
						}
					}
				    catch(e){
					 cgiError.LogError("Error: Error occurrec to get the checkbox values in IntranetFeedback.js: FeedBackCommentsChange()", JSON.stringify(e));
					}
				});
			}
			else{
				var inputElements = document.getElementsByClassName('form-check-input No');
				$.each(inputElements,function(index,inputElement){
					try{
						if(inputElement.checked){
							checkBoxChecked = true;
						}
					}
				    catch(e){
					 cgiError.LogError("Error: Error occurrec to get the checkbox values in IntranetFeedback.js: FeedBackCommentsChange()", JSON.stringify(e));
					}
				});
			}
		}
		
		if(commentsElement != undefined){
			if(checkBoxChecked && commentsHasValue){
				cancelBtn.disabled = false;
			}
			else{
				cancelBtn.disabled = true;
			}
		}
		else {
			if(checkBoxChecked || commentsHasValue){
				cancelBtn.disabled = false;
			}
			else{
				cancelBtn.disabled = true;
			}
		}

		// if(checkBoxChecked || commentsHasValue){
			// cancelBtn.disabled = false;
		// }
		// else{
			// cancelBtn.disabled = true;
		// }
	}
	catch(ex){
		cgiError.LogError("Error: Error to createItem main in BindYesandNoData.js: FeedBackCommentsChange()", JSON.stringify(ex));
	}
}

document.addEventListener("DOMContentLoaded", function(){
	BindYesandNoData();
	var btnGiveFeedBack = document.getElementById(FeedBackCONST.FeedBackID("GiveFeedBack"));
	var btnFeedBackPopup = document.getElementById(FeedBackCONST.FeedBackID("FeedBackPopupBtn"));
	var asideFeedBackPopup = document.getElementById(FeedBackCONST.FeedBackID("AsideFeedBackPopup"));
	var btnRequestYes = document.getElementById(FeedBackCONST.FeedBackID("FeedBackRequstYes"));
	var btnRequestNo = document.getElementById(FeedBackCONST.FeedBackID("FeedBackRequstNo"));
	var btnFeedBackSubmitYes = document.getElementById(FeedBackCONST.FeedBackID("FeedBackSubmitYes"));
	var btnFeedBackSubmitNo = document.getElementById(FeedBackCONST.FeedBackID("FeedBackSubmitNo"));
	var feedBackItemHiddenFld = document.getElementById(FeedBackCONST.FeedBackID("FeedBackItemHiddenField"));
	
	if(btnGiveFeedBack != undefined){
		btnGiveFeedBack.onclick = function(event) {
			event.preventDefault();
			btnGiveFeedBack.style.display = "none";
			asideFeedBackPopup.style.display = "block";
		};
	}
	if(btnFeedBackPopup != undefined){
		btnFeedBackPopup.onclick = function(event) {
			event.preventDefault();
			asideFeedBackPopup.style.display = "none";
			btnGiveFeedBack.style.display = "block";
		};
	}
	if(btnRequestYes != undefined){
		btnRequestYes.onclick = function(event) {
			event.preventDefault();
			AddFeedBackInfo();
			btnFeedBackPopup.style.display = "block";
			btnGiveFeedBack.style.display = "none";
		};
	}
	if(btnRequestNo != undefined){
		btnRequestNo.onclick = function(event) {
			event.preventDefault();
			ClearInputReasons();
			btnFeedBackPopup.style.display = "block";
			btnGiveFeedBack.style.display = "none";
		};
	}
	if(btnFeedBackSubmitYes != undefined){
		btnFeedBackSubmitYes.onclick = function(event) {
			event.preventDefault();
			var curItem = feedBackItemHiddenFld.value;
			if(curItem != null){
				UpdateFeedBack(curItem);
			}
			else{
				cgiError.LogError("Info: Current item is empty and reason not updated BindYesandNoData.js: ","");
			}
		};
	}
	if(btnFeedBackSubmitNo != undefined){
		btnFeedBackSubmitNo.onclick = function(event) {
			event.preventDefault();
			var createFeedbackNoItems = $.Deferred();
			var feedbackNoResponse = CreateFeedBackWithNo();
			feedbackNoResponse.done(function (data) {
				createFeedbackNoItems.resolve(data);
				if(data != null && data != undefined) {
					ClearInputReasons();
					var asideFeedBackPopup = document.getElementById(FeedBackCONST.FeedBackID("AsideFeedBackPopup"));
					var btnGiveFeedBack = document.getElementById(FeedBackCONST.FeedBackID("GiveFeedBack"));
					asideFeedBackPopup.style.display = "none";
					btnGiveFeedBack.style.display = "block";
					$('#Feedback-Modal-No').hide();
				}
			});
		};
	}
});