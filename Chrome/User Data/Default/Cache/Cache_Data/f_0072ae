 cgi.myFavorites = {
		manageOpenBtnId: '#js-my-favorites-manage-open',
		manageCloseBtnId: '#js-my-favorites-manage-close',
		manageShortcutsLink: '.js-manage-shortcuts',
		faveToggle: '.my-favorite-toggle',
		favOffcanvas: '#my-favorites',
		manageBtnWrap: '#my-favorites-footer',
		//favData: [],
		listTitle: 'Favorites',
		listNamePrefix: 'Favorites',
		userListName: '',
		tabsListTitle: 'FavoritesTabs',
		listItemId: 0, //holds a static copy of the list item id of current user's favorites and shortcuts
		FavoritesData: [], // holds a static copy of current user's favorites
		ShortcutsData: [], // holds a static copy of current user's shortcuts
		TabsData: [], //hold a static copy of favorites tabs list items
		userLoginName: '', // holds a static copy of current user's login Name
		PSAId: 0, //holds current users PSA Employee Id
		GlobalFavoritesContentTimeCache: 'GlobalFavoritesContentTimeCache',
		GlobalFavoritesContentDataCache: 'GlobalFavoritesContentDataCache',
		FavoritesDataDeferred: $.Deferred(), //holds a deferred promise to whether favorites and shorcuts data is already fetched
		linkItemTemplate:
			'<div class="list-group-item list-group-item-action d-lg-flex justify-content-lg-between align-items-lg-center"><a href="{linkItemUrl}" onclick="{gaonclick}" {linkItemTarget} class="d-flex justify-content-between align-items-center flex-fill text-body stretched-link favorites-ga4"><div>{linkItemTitle}</div><span class="favorite-icon fal fa-chevron-right" aria-hidden="true"></span></a>{manageBtns}</div>',
		addFaveEN: 'Add to Favorites',
		addFaveFR: 'Ajouter aux favoris',
		removeFaveEN: 'Remove from Favorites',
		removeFaveFR: 'Supprimer des favoris',
		init: function () {
			// the start of the functionality for this code , equivalent to $(document).ready()
			cgi.myFavorites.listeners();
			cgi.myFavorites.ProcessFavoritesRequisites();
			cgi.myFavorites.getMyFavoritesData();
			cgi.myFavorites.BindEventsToControls();
			// $.when(cgi.myFavorites.FavoritesDataDeferred).done(function (data) {
			// if(cgi.myFavorites.listItemId==0){
			// cgi.myFavorites.getInitialLinks();
			// }
			// });
		},
		updateBrowseCGIH1: function () {
			// Update the Favorite Toggle info; need a timeout due to various loading times
			setTimeout(function () {
				var titleEN = $('.Browse-CGI-Landing-TitleEN-span').text();
				var titleFR = $('.Browse-CGI-Landing-TitleFR-span').text();

				if (preferredLanguage == 'EN') {
					$('.my-favorite-toggle').attr(
						'aria-label',
						cgi.myFavorites.addFaveEN + ': ' + titleEN
					);
					$('.my-favorite-toggle').attr('data-title', titleEN);
				} else if (preferredLanguage == 'FR') {
					$('.my-favorite-toggle').attr(
						'aria-label',
						cgi.myFavorites.addFaveFR + ': ' + titleFR
					);
					$('.my-favorite-toggle').attr('data-title', titleFR);
				}
			}, 300);
		},
		//Caching data in a Generic Function
		//getCachedData(tabUrl,'GlobalFavoritesTabsTimeCache','GlobalFavoritesTabsDataCache',(2 * 60 * 1000))
		getCachedData: function (APIUrl, timeCache, dataCache, timeThreshold) {
			var d = $.Deferred();
			//If a caching time is used, create it here
			var dat = new Date();
			var t = dat.getTime();
			//use a unique name for the localStorage value, otherwise there is a risk to overwrite by other functions
			var cachTimeDiff = t - parseInt(localStorage.getItem(timeCache));
			//If cached time has expired, do not load values from cache
			if (
				localStorage.getItem(timeCache) == null ||
				localStorage.getItem(timeCache) == '' ||
				cachTimeDiff > timeThreshold
			) {
				var loadFromCache = false;
			} else {
				var loadFromCache = true;
			}
			//is user properties saved and from current user get from local storage
			if (loadFromCache && localStorage.getItem(dataCache) != null) {
				var theReturnedJSONData = JSON.parse(localStorage.getItem(dataCache));
				console.log('Data loaded from cache ' + cachTimeDiff + ' milliseconds ago');
				//if loading from cache we can resolve the promise directly
				d.resolve(theReturnedJSONData);
			} else {
				/* Example for user profile */
				getItems(APIUrl).then(function (data) {
					var dat = new Date();
					localStorage.setItem(timeCache, dat.getTime());
					//caching: save user properties to local storage
					localStorage.setItem(dataCache, JSON.stringify(data));
					d.resolve(data);
				});
			}
			/* Example for user profile */
			return d.promise();
		},
		//Caching data in a Generic Function
		//getCachedData(tabUrl,'GlobalFavoritesTabsTimeCache','GlobalFavoritesTabsDataCache',(2 * 60 * 1000))
		getCachedDataCallBack: function (CallBackFunction,timeCache,dataCache,timeThreshold) {
			var d = $.Deferred();
			//If a caching time is used, create it here
			var dat = new Date();
			var t = dat.getTime();
			//use a unique name for the localStorage value, otherwise there is a risk to overwrite by other functions
			var cachTimeDiff = t - parseInt(localStorage.getItem(timeCache));
			//If cached time has expired, do not load values from cache
			if (
				localStorage.getItem(timeCache) == null ||
				localStorage.getItem(timeCache) == '' ||
				cachTimeDiff > timeThreshold
			) {
				var loadFromCache = false;
			} else {
				var loadFromCache = true;
			}
			//is user properties saved and from current user get from local storage
			if (loadFromCache && localStorage.getItem(dataCache) != null) {
				var dataCacheString = localStorage.getItem(dataCache);
				var theReturnedJSONData = dataCacheString
					? JSON.parse(dataCacheString)
					: dataCacheString;
				console.log('Data loaded from cache ' + cachTimeDiff + ' milliseconds ago');
				//if loading from cache we can resolve the promise directly
				d.resolve(theReturnedJSONData);
			} else {
				/* Example for user profile */
				CallBackFunction().then(function (data) {
					var dat = new Date();
					localStorage.setItem(timeCache, dat.getTime());
					//caching: save user properties to local storage
					localStorage.setItem(dataCache, JSON.stringify(data));
					d.resolve(data);
				});
			}
			/* Example for user profile */
			return d.promise();
		},
		ProcessFavoritesRequisites: function() {
			cgi.myFavorites.SetPSAId();
			cgi.myFavorites.SetListName();
			//cgi.myFavorites.FetchFavoritesItem();
		},
		SetPSAId: function () {
			var PSAId = '0';
			try {
				PSAId = $('#divUPSPSAEmployeeID').text().trim();
				if (!PSAId) {
					PSAId = '0';
				}
			} catch (ex) {
				console.log('Error fetching PSA ID');
				PSAId = '0';
			}
			cgi.myFavorites.PSAId = PSAId;
		},
		SetListName: function () {
			var userListName = 'FavoritesOthers';
			var PSAId = cgi.myFavorites.PSAId;
			try {
				if (PSAId && PSAId != '0') {
					var suffix = PSAId.substring(PSAId.length - 1);
					cgi.myFavorites.userListName = cgi.myFavorites.listNamePrefix + suffix;
				} else {
					cgi.myFavorites.userListName = 'FavoritesOthers';
				}
			} catch (ex) {
				console.log("Error calculating user's List Name");
				cgi.myFavorites.userListName = 'FavoritesOthers';
			}
		},
		FetchFavoritesItem: function () {
			var d = $.Deferred();
			var loginName = _spPageContextInfo.userLoginName.toLowerCase();
			var webUrl = _spPageContextInfo.siteAbsoluteUrl;
			var ContentUrl =
				webUrl +
				"/_api/web/lists/getbytitle('" +
				cgi.myFavorites.userListName +
				"')/items?$filter=(LoginName eq '" +
				loginName +
				"')&$orderby=ID asc&$top=1";
			//Fetch Items from new Favorites Data
			getItems(ContentUrl).then(function (newData) {
				if (
					newData &&
					newData.d &&
					newData.d.results &&
					newData.d.results.length > 0
				) {
					console.log('New Data');
					console.log(newData);
					d.resolve(newData);
				} else {
					//Fetch Items from old Favorites Data
					var ContentUrl =
						webUrl +
						"/_api/web/lists/getbytitle('" +
						cgi.myFavorites.listTitle +
						"')/items?$filter=(LoginName eq '" +
						loginName +
						"')&$orderby=ID asc&$top=1";
					getItems(ContentUrl).then(function (oldData) {
						if (
							oldData &&
							oldData.d &&
							oldData.d.results &&
							oldData.d.results.length > 0
						) {
							console.log('Old Data');
							console.log(oldData);
							var itemProperties = {};
							itemProperties['__metadata'] = oldData.d.results[0]['__metadata'];
							itemProperties['CopiedToNewList'] = true;
							//itemProperties.CopiedToNewList=1;
							var itemId = oldData.d.results[0].Id;
							updateListItem(
								webUrl,
								cgi.myFavorites.listTitle,
								itemId,
								itemProperties
							).then(function () {
								console.log('Updated list item of old list');
							});
							itemProperties = {};
							itemProperties['__metadata'] = {
								type: 'SP.Data.' + cgi.myFavorites.userListName + 'ListItem',
							};
							itemProperties['Favorites'] = oldData.d.results[0]['Favorites'];
							itemProperties['Shortcuts'] = oldData.d.results[0]['Shortcuts'];
							itemProperties['LoginName'] = oldData.d.results[0]['LoginName'];
							itemProperties['Title'] = cgi.myFavorites.PSAId;
							cgi.myFavorites
								.addItemToFavoritesList(
									webUrl,
									cgi.myFavorites.userListName,
									itemProperties
								)
								.then(function () {
									console.log('Added item to new list from old list');
								});
							d.resolve(oldData);
						} else {
							//Create Pre Favorites
							cgi.myFavorites.getInitialLinks();
							d.resolve(
								({
									d: {
										results: [
											{ ID: 0, Favorites: '[]', Shortcuts: '[]', LoginName: '', Title: '' },
										],
									},
								})
							);
							addItemTomissingpropertiesList();
						}
					});
				}
			});
			return d.promise();
		},
		GetFavoritesItems: function () {
			cgi.myFavorites.FetchFavoritesItem().then(function (data) {
				cgi.myFavorites.FavoritesDataDeferred.resolve({
					FavoritesData: cgi.myFavorites.FavoritesData,
					ShortcutsData: cgi.myFavorites.ShortcutsData,
					LoginName: cgi.myFavorites.userLoginName,
					ListItemId: cgi.myFavorites.listItemId,
					TabsData: cgi.myFavorites.TabsData,
				});
				cgi.myFavorites.BindDataFromStaticVariables();
			});
		},
		getMyFavoritesData: function () {
			// get data from 2 lists that include tabs data , shortcuts data and favorites data
			// Shortcuts URL
			var loginName = _spPageContextInfo.userLoginName.toLowerCase();
			cgi.myFavorites.userLoginName = loginName;
			var listTitle = 'Favorites';
			var webUrl = _spPageContextInfo.siteAbsoluteUrl;
			var ContentUrl =
				webUrl +
				"/_api/web/lists/getbytitle('" +
				listTitle +
				"')/items?$filter=(LoginName eq '" +
				loginName +
				"')&$orderby=ID asc&$top=1";

			listTitle = cgi.myFavorites.tabsListTitle; //'MyFavoritesTabs';
			// Individual Tab Sections
			var tabUrl =
				webUrl +
				"/_api/web/lists/getbytitle('" +
				listTitle +
				"')/items?$select=FR_text,EN_text,ID,DisplayOrder&$orderby=DisplayOrder asc,ID desc&$top=15";

			// Get the favorite data

			//cgi.myFavorites.getFavoritesTabsDataCached(tabUrl)
			$.when(
				cgi.myFavorites.getCachedData(
					tabUrl,
					'GlobalFavoritesTabsTimeCache',
					'GlobalFavoritesTabsDataCache',
					720 * 60 * 1000
				),
				cgi.myFavorites.getCachedDataCallBack(
					cgi.myFavorites.FetchFavoritesItem,
					cgi.myFavorites.GlobalFavoritesContentTimeCache,
					cgi.myFavorites.GlobalFavoritesContentDataCache,
					2 * 60 * 1000
				)
			).done(function (tabData, ContentData) {
				var results = [];
				if (ContentData) {
					results = ContentData.d.results;
				}
				for (i = 0; i < results.length; i++) {
					var currentObject = results[i];
					cgi.myFavorites.listItemId = currentObject.ID;
					cgi.myFavorites.userLoginName = currentObject.LoginName;
					try {
						cgi.myFavorites.FavoritesData = JSON.parse(currentObject.Favorites);
						if (!cgi.myFavorites.FavoritesData) {
							cgi.myFavorites.FavoritesData = [];
						}
					} catch (ex) {
						cgi.myFavorites.FavoritesData = [];
						console.log(
							'Something went wrong when JSON parsing the Favorites array from list'
						);
					}
					try {
						cgi.myFavorites.ShortcutsData = JSON.parse(currentObject.Shortcuts);
						if (!cgi.myFavorites.ShortcutsData) {
							cgi.myFavorites.ShortcutsData = [];
						}
					} catch (ex) {
						cgi.myFavorites.ShortcutsData = [];
						console.log(
							'Something went wrong when JSON parsing the Shortcuts array from list'
						);
					}
				}
				if (tabData) {
					results = tabData.d.results;
				}
				try {
					cgi.myFavorites.TabsData = results;
					if (!cgi.myFavorites.TabsData) {
						cgi.myFavorites.TabsData = [];
					}
				} catch (ex) {
					cgi.myFavorites.TabsData = [];
					console.log(
						'Something went wrong when fetching the Favorites Tabs array from list'
					);
				}

				cgi.myFavorites.FavoritesDataDeferred.resolve({
					FavoritesData: cgi.myFavorites.FavoritesData,
					ShortcutsData: cgi.myFavorites.ShortcutsData,
					LoginName: cgi.myFavorites.userLoginName,
					ListItemId: cgi.myFavorites.listItemId,
					TabsData: cgi.myFavorites.TabsData,
				});
				cgi.myFavorites.BindDataFromStaticVariables();
				if (typeof renderShortcutsData == 'function') {
						renderShortcutsData();
					}
			});
		},
		BindDataFromStaticVariables: function () {
			$.when(cgi.myFavorites.FavoritesDataDeferred).done(function (data) {
				cgi.myFavorites.CheckIfDetailsPageFavorited();
				//cgi.myFavorites.CheckIfNewChannelHomePageFavorited();
				cgi.myFavorites.setTabTitles(
					cgi.myFavorites.TabsData,
					cgi.myFavorites.FavoritesData
				);

				// Set home shortcuts if they exist, otherwise no need to overwrite base HTML
				cgi.myFavorites.generateHomeLinkListings(cgi.myFavorites.ShortcutsData);
				if (cgi.myFavorites.ShortcutsData.length != 0) {
					$('#home-shortcuts-form').addClass('no-shortcuts-to-manage');
				}
			});
		},
		setTabTitles: function (tabData, favData) {
			//Bind the tab Names Dynamically
			var $FirstTab = $('#favorite-home'),
				$SecondTab = $('#favorite-people'),
				$ThirdTab = $('#favorite-apps'),
				$FourthTab = $('#favorite-news'),
				$FifthTab = $('#favorite-browse-cgi'),
				$SixthTab = $('#favorite-more'),
				options = '<option selected="" disabled="">Select Category</option>';

			// Loop throughtab data to generate the tab titles
			$('#home-shortcuts-select-cat').attr('type', 'button');
			$('#home-shortcuts-select-link').attr('type', 'button');

			for (var i = 0; i < tabData.length; i++) {
				var currentItem = tabData[i];

				// Translate the current item's output
				var title = cgi.myFavorites.translateText(currentItem);
				if (i != 0) {
					options +=
						'<option value=' +
						(i + 1) +
						'>' +
						decodeURIComponent(title) +
						'</option>';
				}
				// Populate the section tab titles, ensuring to use the correct language
				var SRHome = 'Home Shortcuts',
					SRTools = 'Tools Favorite Links',
					SRPeople = 'People Favorite Links',
					SRNews = 'News Favorite Links',
					SRBrowse = 'Browse CGI Favorite Links',
					SRMore = 'More Favorite Links';

				if (preferredLanguage == 'FR') {
					SRHome = "Raccourcis d'accueil";
					SRTools = 'Outils Liens favoris';
					SRPeople = 'Supprimer des favoris';
					SRNews = 'Actualités Liens favoris';
					SRBrowse = 'Parcourir les liens favoris CGI';
					SRMore = 'Plus de liens favoris';
				}

				switch (i) {
					case 0:
						// Home
						$FirstTab.html(
							'<span aria-hidden="true">' +
								title +
								'</span><span class="sr-only">' +
								SRHome +
								'</span>'
						);
						break;
					case 2:
						// Tools
						$SecondTab.html(
							'<span aria-hidden="true">' +
								title +
								'</span><span class="sr-only">' +
								SRTools +
								'</span>'
						);
						break;
					case 1:
						// People
						$ThirdTab.html(
							'<span aria-hidden="true">' +
								title +
								'</span><span class="sr-only">' +
								SRPeople +
								'</span>'
						);
						break;
					case 3:
						// News
						$FourthTab.html(
							'<span aria-hidden="true">' +
								title +
								'</span><span class="sr-only">' +
								SRNews +
								'</span>'
						);
						break;
					case 4:
						// Browse
						$FifthTab.html(
							'<span aria-hidden="true">' +
								title +
								'</span><span class="sr-only">' +
								SRBrowse +
								'</span>'
						);
						break;
					case 5:
						// More
						$SixthTab.html(
							'<span aria-hidden="true">' +
								title +
								'</span><span class="sr-only">' +
								SRMore +
								'</span>'
						);
						break;
				}

				// Set favorites if they exist, otherwise no need to overwrite base HTML
				if (favData.length >= 0) {
					cgi.myFavorites.generateSectionLinkListings(favData, title, i);
				}
				$('#home-add-new-form-category').html(options);

				$('#favorite-home').addClass('active');
			}
		},
		generateSectionLinkListings: function (favData, tab, tabIndex) {
			//Bind Favorites Data Tab wise
			var $SecondTabListGroup = $('#favorite-people-tab .list-group'),
				$ThirdTabListGroup = $('#favorite-apps-tab .list-group'),
				$FourthTabListGroup = $('#favorite-news-tab .list-group'),
				$FifthTabListGroup = $('#favorite-browse-cgi-tab .list-group'),
				$SixthTabListGroup = $('#favorite-more-tab .list-group'),
				SecondTabLinkListing = '',
				ThirdTabLinkListing = '',
				FourthTabLinkListing = '',
				FifthTabLinkListing = '',
				SixthTabLinkListing = '',
				addToHome = 'Add to Home',
				SRaddToHome = 'Add Link to Home Shortcuts:',
				unfavorite = 'Unfavorite',
				SRunfavorite = 'Unfavorite Link:';

			if (preferredLanguage == 'FR') {
				addToHome = "Ajouter à l'accueil";
				SRaddToHome = 'Ajouter un lien vers Accueil Raccourcis:';
				unfavorite = 'Supprimer des favoris';
				SRunfavorite = 'Lien Supprimer des favoris:';
			}
			var sectionLinkItemTemplate = cgi.myFavorites.linkItemTemplate.replace(
				'{manageBtns}',
				'<div class="section-buttons"><button type="button" class="add-as-home-shortcut btn btn-outline-primary btn-sm mr-2" onclick="(cgi.myFavorites.VerifyValidationsForShortcuts(this, \'{EnglishTitle}\',\'{EnglishTitle}\',\'{FrenchTitle}\',\'{OpensInNewTab}\',\'{Url}\'))"><span class="fal fa-plus mr-1" aria-hidden="true"></span><span aria-hidden="true">' +
					addToHome +
					'</span><span class="sr-only">' +
					SRaddToHome +
					' </span><span class="sr-only">{SRtitle}</span></button><button type="button" class="unfavorite btn btn-outline-primary btn-sm" onclick="(cgi.myFavorites.RemoveFavorites(\'{EnglishTitle}\',\'{FrenchTitle}\',\'{Url}\',this))"><span class="fal fa-star mr-1" aria-hidden="true"></span><span aria-hidden="true">' +
					unfavorite +
					'</span><span class="sr-only">' +
					SRunfavorite +
					' </span><span class="sr-only">{SRtitle}</span></button></div>'
			);
			var currentLinksData = favData.filter(function (x) {
				return x.LinkTab == tabIndex + 1;
				// if (preferredLanguage == 'FR') {
				// return x.LinkTab.FR_text == tab;
				// }
				// else {
				// return x.LinkTab.EN_text == tab;
				// }
			});

			var isSecondTabExist = false;
			var isThirdTabExist = false;
			var isFourthTabExist = false;
			var isFifthTabExist = false;
			var isSixthTabExist = false;

			// Populate the section tab links
			for (var j = 0; j < currentLinksData.length; j++) {
				var currentItem = currentLinksData[j];

				// Translate the current item's output
				var title = decodeURIComponent(cgi.myFavorites.translateText(currentItem));
				if (!title) {
					title = decodeURIComponent(currentItem.EN_text);
					if (!title) {
						title = decodeURIComponent(currentItem.FR_text);
					}
				}
				
				var gaonclick = onclick="ga('send','event','Favorites','{link}','');";
				// Get url and determine if url should open in a new window
				var linkUrl = decodeURIComponent(currentItem.Link)
					.replace(/\'/g, "\\'")
					.replace(/\"/g, '\\"');
				var targetSpecifyString = cgi.myFavorites.checkLinkTarget(currentItem);

				var EnglishTitle = decodeURIComponent(currentItem.EN_text);
				var FrenchTitle = decodeURIComponent(currentItem.FR_text);
				var SRtitle = EnglishTitle;
				if (preferredLanguage == 'FR') {
					SRtitle = FrenchTitle;
				}
				var OpensInNewTab = currentItem.OpensInNewTab;
				//var linkID = currentItem.Id;

				// Generate the listing HTML
				switch (tabIndex) {
					// People
					case 2:
						SecondTabLinkListing =
							SecondTabLinkListing +
							sectionLinkItemTemplate
							    .replace('{gaonclick}', gaonclick)
								.replace('{link}',linkUrl)
								.replace('{linkItemUrl}', linkUrl)
								.replace('{linkItemTarget}', targetSpecifyString)
								.replace('{linkItemTitle}', title)
								.replace('{linkItemCategory}', '')
								.replace('{Title}', EnglishTitle)
								//.replace('{linkItemId}', linkID)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{OpensInNewTab}', OpensInNewTab)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle);
						isSecondTabExist = true;
						break;
					// Tools
					case 1:
						ThirdTabLinkListing =
							ThirdTabLinkListing +
							sectionLinkItemTemplate
							    .replace('{gaonclick}', gaonclick)
								.replace('{link}',linkUrl)
								.replace('{linkItemUrl}', linkUrl)
								.replace('{linkItemTarget}', targetSpecifyString)
								.replace('{linkItemTitle}', title)
								.replace('{linkItemCategory}', '')
								.replace('{Title}', EnglishTitle)
								//.replace('{linkItemId}', linkID)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{OpensInNewTab}', OpensInNewTab)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle);
						isThirdTabExist = true;
						break;
					// News
					case 3:
						FourthTabLinkListing =
							FourthTabLinkListing +
							sectionLinkItemTemplate
							    .replace('{gaonclick}', gaonclick)
								.replace('{link}',linkUrl)
								.replace('{linkItemUrl}', linkUrl)
								.replace('{linkItemTarget}', targetSpecifyString)
								.replace('{linkItemTitle}', title)
								.replace('{linkItemCategory}', '')
								.replace('{Title}', EnglishTitle)
								//.replace('{linkItemId}', linkID)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{OpensInNewTab}', OpensInNewTab)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle);
						isFourthTabExist = true;
						break;
					// Browse
					case 4:
						FifthTabLinkListing =
							FifthTabLinkListing +
							sectionLinkItemTemplate
							    .replace('{gaonclick}', gaonclick)
								.replace('{link}',linkUrl)
								.replace('{linkItemUrl}', linkUrl)
								.replace('{linkItemTarget}', targetSpecifyString)
								.replace('{linkItemTitle}', title)
								.replace('{linkItemCategory}', '')
								.replace('{Title}', EnglishTitle)
								//.replace('{linkItemId}', linkID)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{OpensInNewTab}', OpensInNewTab)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle);
						isFifthTabExist = true;
						break;
					// More
					case 5:
						SixthTabLinkListing =
							SixthTabLinkListing +
							sectionLinkItemTemplate
							    .replace('{gaonclick}', gaonclick)
								.replace('{link}',linkUrl)
								.replace('{linkItemUrl}', linkUrl)
								.replace('{linkItemTarget}', targetSpecifyString)
								.replace('{linkItemTitle}', title)
								.replace('{linkItemCategory}', '')
								.replace('{Title}', EnglishTitle)
								//.replace('{linkItemId}', linkID)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{OpensInNewTab}', OpensInNewTab)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace(
									'{FrenchTitle}',
									encodeURIComponent(FrenchTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle)
								.replace(
									'{Url}',
									encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
								)
								.replace(
									'{EnglishTitle}',
									encodeURIComponent(EnglishTitle)
										.replace(/\'/g, "\\'")
										.replace(/\"/g, '\\"')
								)
								.replace('{SRtitle}', SRtitle);
						isSixthTabExist = true;
						break;
				}
			}

			var emptyListHtml =
				"<p class='list-group-item text-muted border-0'>No favorites added, yet. You can favorite pages by clicking the start icon next to a page's title.</p>";

			if (preferredLanguage == 'FR') {
				emptyListHtml =
					"<p class='list-group-item text-muted border-0'>Aucun favori ajouté, encore. Vous pouvez pages favorites en cliquant sur l'icône de démarrage à côté du titre d'une page.</p>";
			}
			// Insert the Section List Groups HTML
			// People
			if (tabIndex == 2) {
				if (SecondTabLinkListing) {
					$SecondTabListGroup.html(SecondTabLinkListing);
				} else {
					$SecondTabListGroup.html(emptyListHtml);
				}
			}

			// Tools
			if (tabIndex == 1) {
				if (ThirdTabLinkListing) {
					$ThirdTabListGroup.html(ThirdTabLinkListing);
				} else {
					$ThirdTabListGroup.html(emptyListHtml);
				}
			}

			// News
			if (tabIndex == 3) {
				if (FourthTabLinkListing) {
					$FourthTabListGroup.html(FourthTabLinkListing);
				} else {
					$FourthTabListGroup.html(emptyListHtml);
				}
			}

			// Browse
			if (tabIndex == 4) {
				if (FifthTabLinkListing) {
					$FifthTabListGroup.html(FifthTabLinkListing);
				} else {
					$FifthTabListGroup.html(emptyListHtml);
				}
			}

			// More
			if (tabIndex == 5) {
				if (SixthTabLinkListing) {
					$SixthTabListGroup.html(SixthTabLinkListing);
				} else {
					$SixthTabListGroup.html(emptyListHtml);
				}
			}

			$('.favorite-badge.badge.badge-light').css('display', 'none');
		},
		generateHomeLinkListings: function (homeData) {
			//Bind Shortcuts Data
			var $homeListGroup = $('#favorite-home-tab .list-group'),
				VisRemove = 'Remove',
				SRRemove = 'Remove Link From My Favorites:';

			if (preferredLanguage == 'FR') {
				VisRemove = 'Retirer';
				SRRemove = 'Supprimer le lien de mes favoris:';
			}
			var homeLinkItemTemplate = cgi.myFavorites.linkItemTemplate.replace(
				'{manageBtns}',
				'<div class="home-buttons"><button type="button" class="remove-home-shortcut btn btn-outline-primary btn-sm" onclick="(cgi.myFavorites.RemoveShortcut(\'{EnglishTitle}\',\'{FrenchTitle}\',\'{Url}\',this))"><span class="fal fa-times mr-1" aria-hidden="true"></span><span aria-hidden="true">' +
					VisRemove +
					'</span><span class="sr-only">' +
					SRRemove +
					' </span><span class="sr-only">{SRtitle}</span></button></div>'
			);
			var homeLinkListing = '';

			for (var j = 0; j < homeData.length; j++) {
				var currentItem = homeData[j];

				// Translate the current item's output
				var title = decodeURIComponent(cgi.myFavorites.translateText(currentItem));

				// Get url and determine if url should open in a new window
				var linkUrl = decodeURIComponent(currentItem.Link);
				var targetSpecifyString = cgi.myFavorites.checkLinkTarget(currentItem);
				var gaonclick = onclick="ga('send','event','Favorites','{link}','');";

				// Get correct title
				var EnglishTitle = decodeURIComponent(currentItem.EN_text);
				var FrenchTitle = decodeURIComponent(currentItem.FR_text);
				var SRtitle = EnglishTitle;
				if (preferredLanguage == 'FR') {
					SRtitle = FrenchTitle;
				}
				//var linkID = currentItem.ID;
				// Generate the listing HTML
				homeLinkListing =
					homeLinkListing +
					homeLinkItemTemplate
					    .replace('{gaonclick}', gaonclick)
						.replace('{link}',linkUrl)
						.replace('{linkItemUrl}', linkUrl)
						.replace('{linkItemTarget}', targetSpecifyString)
						.replace('{linkItemTitle}', title)
						.replace('{linkItemCategory}', '')
						.replace(
							'{EnglishTitle}',
							encodeURIComponent(EnglishTitle)
								.replace(/\'/g, "\\'")
								.replace(/\"/g, '\\"')
						)
						.replace(
							'{FrenchTitle}',
							encodeURIComponent(FrenchTitle)
								.replace(/\'/g, "\\'")
								.replace(/\"/g, '\\"')
						)
						.replace(
							'{Url}',
							encodeURIComponent(linkUrl).replace(/\'/g, "\\'").replace(/\"/g, '\\"')
						)
						.replace('{SRtitle}', SRtitle);
				//.replace('{linkItemId}', linkID);
			}

			// Insert the Home List Group HTML based on if shortcuts are available
			if (homeLinkListing != '') {
				$homeListGroup.html(homeLinkListing);
			} else {
				var NoShortcutsText =
					'No shortcuts set, yet. Personalize this section to add up to 10 shortcuts.';
				if (preferredLanguage == 'FR') {
					NoShortcutsText =
						"Aucun jeu de raccourcis, encore. Personnalisez cette section pour ajouter jusqu'à 10 raccourcis.";
				}

				$homeListGroup.html(
					'<p class="list-group-item text-muted border-0">' +
						NoShortcutsText +
						'</p>'
				);
			}

			$('.favorite-badge.badge.badge-light').css('display', 'none');
			//$('#home-shortcuts-form').show();
		},
		toggleFavorites: function (
			EN_text,
			FR_text,
			Link,
			Order,
			OpensInNewTab,
			clickedEl,
			LinkTab
		) {
			var isFavorite = $(event.target)
				.closest('.my-favorite-toggle')
				.hasClass('is-favorite');
			if (!isFavorite) {
				cgi.myFavorites.addFavorites(
					EN_text,
					FR_text,
					Link,
					Order,
					OpensInNewTab,
					null,
					LinkTab
				);
			} else {
				cgi.myFavorites.RemoveFavorites(EN_text, FR_text, Link, null);
			}
		},
		addShortcuts: function (
			EN_text,
			FR_text,
			Link,
			Order,
			OpensInNewTab,
			clickedEl
		) {
			var loginName = _spPageContextInfo.userLoginName.toLowerCase();
			var ContentUrl =
				_spPageContextInfo.siteAbsoluteUrl +
				"/_api/web/lists/getbytitle('" +
				cgi.myFavorites.userListName +
				"')/items?$filter=(LoginName eq '" +
				loginName +
				"')&$orderby=ID asc&$top=1";
			getItems(ContentUrl).then(function (newData) {
				var data = {};
				if (
					newData &&
					newData.d &&
					newData.d.results &&
					newData.d.results.length > 0
				) {
					data = newData;
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentTimeCache, '');
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentDataCache, '');
					for (i = 0; i < newData.d.results, length; i++) {
						var currentObject = newData.d.results[i];
						cgi.myFavorites.listItemId = currentObject.ID;
						try {
							cgi.myFavorites.ShortcutsData = JSON.parse(currentObject.Shortcuts);
							if (!cgi.myFavorites.ShortcutsData) {
								cgi.myFavorites.ShortcutsData = [];
							}
						} catch (ex) {
							cgi.myFavorites.ShortcutsData = [];
							console.log(
								'Something went wrong when JSON parsing the Shortcuts array from list'
							);
						}
					}

					if (cgi.myFavorites.listItemId != 0) {
						var ShortcutsData = cgi.myFavorites.ShortcutsData;
						var checkFlag = ShortcutsData.filter(function (x) {
							return (
								x.EN_text.toLowerCase() == EN_text.toLowerCase() &&
								x.FR_text.toLowerCase() == FR_text.toLowerCase() &&
								x.Link.toLowerCase() == Link.toLowerCase()
							);
						});
						if (checkFlag.length == 0) {
							var newShortcutObject = {
								EN_text: encodeURIComponent(decodeURIComponent(EN_text)),
								FR_text: encodeURIComponent(decodeURIComponent(FR_text)),
								Link: encodeURIComponent(decodeURIComponent(Link)),
								Order: Order,
								OpensInNewTab: OpensInNewTab,
							};
							ShortcutsData.push(newShortcutObject);
							var listItemObject = {
								Shortcuts: JSON.stringify(ShortcutsData),
							};
							cgi.myFavorites.UpdateFavortiesListItem(listItemObject, clickedEl, true);
						} else {
							var copy = 'Item is already present as shortcut.';
							var btn = 'Close';
							if (preferredLanguage == 'FR') {
								copy = "L'élément est déjà présent en tant que raccourci.";
								btn = 'Fermer';
							}
							cgi.myFavorites.openModal(copy, btn);
						}
					} else {
						var ShortcutsData = [];
						var newShortcutObject = {
							EN_text: encodeURIComponent(decodeURIComponent(EN_text)),
							FR_text: encodeURIComponent(decodeURIComponent(FR_text)),
							Link: encodeURIComponent(decodeURIComponent(Link)),
							Order: Order,
							OpensInNewTab: OpensInNewTab,
						};
						ShortcutsData.push(newShortcutObject);
						var listItemObject = {
							LoginName: cgi.myFavorites.userLoginName.toLowerCase(),
							Shortcuts: JSON.stringify(ShortcutsData),
							Favorites: '[]',
						};
						cgi.myFavorites.addFavortiesListItem(listItemObject, clickedEl);
					}
				}
			});
		},
		addFavorites: function (
			EN_text,
			FR_text,
			Link,
			Order,
			OpensInNewTab,
			clickedEl,
			LinkTab
		) {
			var loginName = _spPageContextInfo.userLoginName.toLowerCase();
			var ContentUrl =
				_spPageContextInfo.siteAbsoluteUrl +
				"/_api/web/lists/getbytitle('" +
				cgi.myFavorites.userListName +
				"')/items?$filter=(LoginName eq '" +
				loginName +
				"')&$orderby=ID asc&$top=1";
			getItems(ContentUrl).then(function (newData) {
				var data = {};
				if (
					newData &&
					newData.d &&
					newData.d.results &&
					newData.d.results.length > 0
				) {
					data = newData;
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentTimeCache, '');
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentDataCache, '');
					for (i = 0; i < newData.d.results, length; i++) {
						var currentObject = newData.d.results[i];
						cgi.myFavorites.listItemId = currentObject.ID;
						try {
							cgi.myFavorites.FavoritesData = JSON.parse(currentObject.Favorites);
							if (!cgi.myFavorites.FavoritesData) {
								cgi.myFavorites.FavoritesData = [];
							}
						} catch (ex) {
							cgi.myFavorites.FavoritesData = [];
							console.log(
								'Something went wrong when JSON parsing the Favorites array from list'
							);
						}
					}

					if (cgi.myFavorites.listItemId != 0) {
						var FavoritesData = cgi.myFavorites.FavoritesData;
						var checkFlag = FavoritesData.filter(function (x) {
							return (
								x.EN_text.toLowerCase() == EN_text.toLowerCase() &&
								x.FR_text.toLowerCase() == FR_text.toLowerCase() &&
								x.Link.toLowerCase() == Link.toLowerCase()
							);
						});
						if (checkFlag.length == 0) {
							var newFavoritesObject = {
								EN_text: encodeURIComponent(decodeURIComponent(EN_text)),
								FR_text: encodeURIComponent(decodeURIComponent(FR_text)),
								Link: encodeURIComponent(decodeURIComponent(Link)),
								LinkTab: LinkTab,
								Order: Order,
								OpensInNewTab: OpensInNewTab,
							};
							FavoritesData.push(newFavoritesObject);
							var listItemObject = {
								Favorites: JSON.stringify(FavoritesData),
							};
							cgi.myFavorites.UpdateFavortiesListItem(listItemObject, clickedEl, true);
						} else {
							var copy = 'Item is already present as Favorite.';
							var btn = 'Close';
							if (preferredLanguage == 'FR') {
								copy = "L'élément est déjà présent en tant que favori.";
								btn = 'Fermer';
							}
							cgi.myFavorites.openModal(copy, btn);
						}
					} else {
						var FavoritesData = [];
						var newFavoritesObject = {
							EN_text: encodeURIComponent(decodeURIComponent(EN_text)),
							FR_text: encodeURIComponent(decodeURIComponent(FR_text)),
							Link: encodeURIComponent(decodeURIComponent(Link)),
							LinkTab: LinkTab,
							Order: Order,
							OpensInNewTab: OpensInNewTab,
						};
						FavoritesData.push(newFavoritesObject);
						var listItemObject = {
							LoginName: cgi.myFavorites.userLoginName.toLowerCase(),
							Favorites: JSON.stringify(FavoritesData),
							Shortcuts: '[]',
						};
						cgi.myFavorites.addFavortiesListItem(listItemObject, clickedEl);
					}
				}
			});
		},
		RemoveShortcut: function (EN_text, FR_text, Link, clickedEl) {
			var loginName = _spPageContextInfo.userLoginName.toLowerCase();
			var ContentUrl =
				_spPageContextInfo.siteAbsoluteUrl +
				"/_api/web/lists/getbytitle('" +
				cgi.myFavorites.userListName +
				"')/items?$filter=(LoginName eq '" +
				loginName +
				"')&$orderby=ID asc&$top=1";
			getItems(ContentUrl).then(function (newData) {
				var data = {};
				if (
					newData &&
					newData.d &&
					newData.d.results &&
					newData.d.results.length > 0
				) {
					data = newData;
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentTimeCache, '');
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentDataCache, '');
					for (i = 0; i < newData.d.results, length; i++) {
						var currentObject = newData.d.results[i];
						cgi.myFavorites.listItemId = currentObject.ID;
						try {
							cgi.myFavorites.ShortcutsData = JSON.parse(currentObject.Shortcuts);
							if (!cgi.myFavorites.ShortcutsData) {
								cgi.myFavorites.ShortcutsData = [];
							}
						} catch (ex) {
							cgi.myFavorites.ShortcutsData = [];
							console.log(
								'Something went wrong when JSON parsing the Shortcuts array from list'
							);
						}
					}

					var ShortcutsData = cgi.myFavorites.ShortcutsData;
					var NewShortcutsData = ShortcutsData.filter(function (x) {
						return (
							x.EN_text.toLowerCase() != EN_text.toLowerCase() &&
							x.FR_text.toLowerCase() != FR_text.toLowerCase() &&
							x.Link.toLowerCase() != Link.toLowerCase()
						);
					});
					if (NewShortcutsData.length < ShortcutsData.length) {
						var listItemObject = {
							Shortcuts: JSON.stringify(NewShortcutsData),
						};
						cgi.myFavorites.UpdateFavortiesListItem(listItemObject, clickedEl, false);
					} else {
						var copy = 'Item was not found as shortcut.';
						var btn = 'Close';
						if (preferredLanguage == 'FR') {
							copy = "L'élément n'a pas été trouvé en tant que raccourci.";
							btn = 'Fermer';
						}
						cgi.myFavorites.openModal(copy, btn);
					}
				}
			});
		},
		RemoveFavorites: function (EN_text, FR_text, Link, clickedEl) {
			var loginName = _spPageContextInfo.userLoginName.toLowerCase();
			var ContentUrl =
				_spPageContextInfo.siteAbsoluteUrl +
				"/_api/web/lists/getbytitle('" +
				cgi.myFavorites.userListName +
				"')/items?$filter=(LoginName eq '" +
				loginName +
				"')&$orderby=ID asc&$top=1";
			getItems(ContentUrl).then(function (newData) {
				var data = {};
				if (
					newData &&
					newData.d &&
					newData.d.results &&
					newData.d.results.length > 0
				) {
					data = newData;
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentTimeCache, '');
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentDataCache, '');
					for (i = 0; i < newData.d.results, length; i++) {
						var currentObject = newData.d.results[i];
						cgi.myFavorites.listItemId = currentObject.ID;
						try {
							cgi.myFavorites.FavoritesData = JSON.parse(currentObject.Favorites);
							if (!cgi.myFavorites.FavoritesData) {
								cgi.myFavorites.FavoritesData = [];
							}
						} catch (ex) {
							cgi.myFavorites.FavoritesData = [];
							console.log(
								'Something went wrong when JSON parsing the Favorites array from list'
							);
						}
					}

					var FavoritesData = cgi.myFavorites.FavoritesData;
					var NewSFavoritesData = FavoritesData.filter(function (x) {
						return (
							x.EN_text.toLowerCase() != EN_text.toLowerCase() &&
							x.FR_text.toLowerCase() != FR_text.toLowerCase() &&
							x.Link.toLowerCase() != Link.toLowerCase()
						);
					});
					if (NewSFavoritesData.length < FavoritesData.length) {
						var listItemObject = {
							Favorites: JSON.stringify(NewSFavoritesData),
						};
						cgi.myFavorites.UpdateFavortiesListItem(listItemObject, clickedEl, false);
					} else {
						var copy = 'Item was not found as Favorite.';
						var btn = 'Close';
						if (preferredLanguage == 'FR') {
							copy = "L'élément n'a pas été trouvé comme favori.";
							btn = 'Fermer';
						}
						cgi.myFavorites.openModal(copy, btn);
					}
				}
			});
		},
		UpdateCacheItem: function () {
			var FavoritesContentCache = JSON.parse(
				localStorage.getItem(cgi.myFavorites.GlobalFavoritesContentDataCache)
			);
			var FavoritesResults = FavoritesContentCache.d.results;
			var FavoritesObect = [];
			if (FavoritesResults.length > 0) {
				FavoritesObect = FavoritesResults[0];
				FavoritesObect['Favorites'] = JSON.stringify(cgi.myFavorites.FavoritesData);
				FavoritesObect['Shortcuts'] = JSON.stringify(cgi.myFavorites.ShortcutsData);
			} else {
				FavoritesObect = {
					LoginName: cgi.myFavorites.userLoginName,
					Favorites: JSON.stringify(cgi.myFavorites.FavoritesData),
					Shortcuts: JSON.stringify(cgi.myFavorites.ShortcutsData),
					ID: cgi.myFavorites.listItemId,
				};
			}
			var data = {
				d: {
					results: [FavoritesObect],
				},
			};
			var dat = new Date();
			localStorage.setItem(
				cgi.myFavorites.GlobalFavoritesContentTimeCache,
				dat.getTime()
			);
			//caching: save user properties to local storage
			localStorage.setItem(
				cgi.myFavorites.GlobalFavoritesContentDataCache,
				JSON.stringify(data)
			);
		},
		UpdateFavortiesListItem: function (ListItemObject, clickedEl, addFlag) {
			ListItemObject['__metadata'] = {
				type: 'SP.Data.' + cgi.myFavorites.userListName + 'ListItem',
			};
			if (ListItemObject.Favorites) {
				cgi.myFavorites.FavoritesData = JSON.parse(ListItemObject.Favorites);
			}
			if (ListItemObject.Shortcuts) {
				cgi.myFavorites.ShortcutsData = JSON.parse(ListItemObject.Shortcuts);
			}
			//cgi.myFavorites.UpdateCacheItem();
			var itemProperties = ListItemObject;
			var webUrl = _spPageContextInfo.siteAbsoluteUrl;
			var listTitle = cgi.myFavorites.userListName; //'All_Members';
			var itemId = cgi.myFavorites.listItemId;
			updateListItem(webUrl, listTitle, itemId, itemProperties).then(function (
				result
			) {
				cgi.myFavorites.getMyFavoritesData();
			});
			if (clickedEl) {
				if (addFlag) {
					var LinkAddedText = 'Link Added';
					if (preferredLanguage == 'FR') {
						LinkAddedText = 'Lien ajouté';
					}

					$(clickedEl).html(
						'<span class="fal fa-check mr-1" aria-hidden="true"></span>' +
							LinkAddedText
					);
				} else {
					var LinkRemovedText = 'Link Removed';
					if (preferredLanguage == 'FR') {
						LinkRemovedText = 'Lien Removed';
					}
					$(clickedEl).html(
						'<span class="fal fa-check mr-1" aria-hidden="true"></span>' +
							LinkRemovedText
					);
				}
			}
		},
		
		addFavortiesListItem: function (ListItemObject, clickedEl) {
			ListItemObject['__metadata'] = {
				type: 'SP.Data.' + cgi.myFavorites.userListName + 'ListItem',
			};
			if (ListItemObject.Favorites) {
				cgi.myFavorites.FavoritesData = JSON.parse(ListItemObject.Favorites);
			}
			if (ListItemObject.Shortcuts) {
				cgi.myFavorites.ShortcutsData = JSON.parse(ListItemObject.Shortcuts);
			}
			//cgi.myFavorites.UpdateCacheItem();
			var itemProperties = ListItemObject;
			var webUrl = _spPageContextInfo.siteAbsoluteUrl;
			var listTitle = cgi.myFavorites.userListName; //'All_Members';
			//var itemId=cgi.myFavorites.listItemId;
			cgi.myFavorites
				.addItemToFavoritesList(webUrl, listTitle, itemProperties)
				.then(function (result) {
					cgi.myFavorites.getMyFavoritesData();
				});

			if (clickedEl) {
				var LinkAddedText = 'Link Added';
				if (preferredLanguage == 'FR') {
					LinkAddedText = 'Lien ajouté';
				}

				$(clickedEl).html(
					'<span class="fal fa-check mr-1" aria-hidden="true"></span>' +
						LinkAddedText
				);
			}
		},
		addItemToFavoritesList: function (webUrl, listTitle, itemProperties) {
			var options = {
				url: webUrl + "/_api/web/lists/getbytitle('" + listTitle + "')/items",
				method: 'POST',
				headers: {
					'X-HTTP-Method': 'POST',
				},
				payload: itemProperties,
			};
			return executeJson(options);
		},

			
		translateText: function (item) {
			// TODO: language for the management button ("Remove")
			var translatedText = '';

			try {
				var languageCheck = preferredLanguage ? preferredLanguage : 'EN';
				if (preferredLanguage == 'FR') {
					translatedText = item.FR_text;
				} else {
					translatedText = item.EN_text;
				}
			} catch (ex) {
				translatedText = item.EN_text;
				console.log(
					'Unable to Render My Favorites preferred language. Showing Default value : ' +
						translatedText
				);
			}
			return translatedText;
		},
		toggleFavorite: function (e) {
			e.preventDefault();
			var isFavorite = $(this).hasClass('is-favorite');
			var title = $(this).attr('data-title');

			if (isFavorite) {
				$(this).removeClass('is-favorite');
				$(this).parents('.link-options').removeClass('is-favorite');
				//This is for showing new tag in tools when the tool is favorite
				$(this).parents('.link-options').parent().find('.ToolnewTagBG').removeClass('d-none');
				
				if (preferredLanguage == 'EN') {
					$(this).attr('data-original-title', cgi.myFavorites.addFaveEN).tooltip('hide');
					$(this).attr('aria-label', cgi.myFavorites.addFaveEN + ': ' + title);
				} else if (preferredLanguage == 'FR') {
					$(this).attr('data-original-title', cgi.myFavorites.addFaveFR).tooltip('hide');
					$(this).attr('aria-label', cgi.myFavorites.addFaveFR + ': ' + title);
				}
			} else {
				$(this).addClass('is-favorite');
				$(this).parents('.link-options').addClass('is-favorite');
				//This is for removing new tag in tools when the tool is favorite
				$(this).parents('.link-options').parent().find('.ToolnewTagBG').addClass('d-none');
				
				if (preferredLanguage == 'EN') {
					$(this).attr('data-original-title', cgi.myFavorites.removeFaveEN).tooltip('hide');
					$(this).attr('aria-label', cgi.myFavorites.removeFaveEN + ': ' + title);
				} else if (preferredLanguage == 'FR') {
					$(this).attr('data-original-title', cgi.myFavorites.removeFaveFR).tooltip('hide');
					$(this).attr('aria-label', cgi.myFavorites.removeFaveFR + ': ' + title);
				}
			}
		},
		getTopLevelSubSite: function () {
			var link = _spPageContextInfo.webAbsoluteUrl.split(
				_spPageContextInfo.siteAbsoluteUrl
			);
			var topLevelSubSite = '';
			if (link && link.length > 1 && link[1]) {
				var subsite = link[1];
				if (!subsite) {
					//Rootsite
					topLevelSubSite = '';
				} else {
					if (subsite.lastIndexOf('/') == 0) {
						//Top Level Subsite
						topLevelSubSite = link[1].substring(1, link[1].length);
					} else {
						//Lower Level Subsites
						topLevelSubSite = link[1].substring(1, link[1].indexOf('/', 1));
					}
				}
			}
			return topLevelSubSite;
		},
		CheckIfDetailsPageFavorited: function () {
			var rootSubsite = cgi.myFavorites.getTopLevelSubSite();
			var currentLink = window.location.href;
			if (currentLink.indexOf('#') >= 0) {
				currentLink = currentLink.substring(0, currentLink.indexOf('#'));
			}
			if (currentLink.indexOf('?') >= 0) {
				currentLink = currentLink.substring(0, currentLink.indexOf('?'));
			}
			if (rootSubsite == 'browse' || rootSubsite == 'bdkx' || rootSubsite == 'news' || rootSubsite == 'solutions') {
				var absoluteUrl = '';
				var relativeUrl = '';
				var relativeCompleteUrl = '';
				var items = [];
				if (
					currentLink.substring(currentLink.lastIndexOf('/')).toLowerCase() ==
					'/default.aspx'
				) {
					absoluteUrl = _spPageContextInfo.webAbsoluteUrl;
					relativeUrl = _spPageContextInfo.webServerRelativeUrl;
					relativeCompleteUrl = currentLink.substring(
						currentLink.indexOf(_spPageContextInfo.webServerRelativeUrl),
						currentLink.length
					);
					var items = cgi.myFavorites.FavoritesData.filter(function (x) {
						return (
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(currentLink) ||
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(absoluteUrl) ||
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(absoluteUrl + '/') ||
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(relativeUrl) ||
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(relativeUrl + '/') ||
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(relativeCompleteUrl)
						);
					});
				} else {
					absoluteUrl = currentLink;
					relativeCompleteUrl = currentLink.substring(
						currentLink.indexOf(_spPageContextInfo.webServerRelativeUrl),
						currentLink.length
					);
					var items = cgi.myFavorites.FavoritesData.filter(function (x) {
						return (
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(currentLink) ||
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(absoluteUrl) ||
							encodeURIComponent(decodeURIComponent(x.Link).trim()) ==
								encodeURIComponent(relativeCompleteUrl)
						);
					});
				}
				//var items=cgi.myFavorites.FavoritesData.filter(function(x){return x.Link==encodeURIComponent(currentLink) && x.LinkTab==5});
				// var items=cgi.myFavorites.FavoritesData.filter(function(x){return ( x.Link==encodeURIComponent(currentLink)
				// || x.Link==encodeURIComponent(absoluteUrl)
				// || x.Link==encodeURIComponent(relativeUrl)
				// || x.Link==encodeURIComponent(relativeCompleteUrl)
				// )}
				// );
				var selector = 'h1 .my-favorite-toggle';
				if (items.length > 0) {
					$(selector).addClass('is-favorite');
					var removeFromFaveText = 'Remove from Favorites';
					if (preferredLanguage == 'FR') {
						removeFromFaveText = 'Retirer des Favoris';
					}
					$(selector)
						.attr('data-original-title', removeFromFaveText)
						.tooltip('hide');
				} else {
					var addToFaveText = 'Add to Favorites';
					if (preferredLanguage == 'FR') {
						addToFaveText = 'Ajouter aux Favoris';
					}
					$(selector).attr('data-original-title', addToFaveText).tooltip('hide');
				}
				// var EnglishTitle=$("#Browse-CGI-Landing-TitleEN-span").text().trim();
				// var FrenchTitle=$("#Browse-CGI-Landing-TitleFR-span").text().trim();
			}
		},
		FavoriteCurrentPageNewsChannel: function () {
			var EnglishTitle = $('span.NewsEvents-CGI-AllNews-TitleEN-span').text().trim();
			var FrenchTitle = $('span.NewsEvents-CGI-AllNews-TitleFR-span').text().trim();
			if(!FrenchTitle){
				if(EnglishTitle){
					FrenchTitle=EnglishTitle;
				}
			}
			if(!EnglishTitle){
				if(FrenchTitle){
					EnglishTitle=FrenchTitle;
				}
			}
			var LinkOrder = 99;
			var Tab = 4;
			var currentObject = this;
			var OpensInNewTab = 0;
			var LinkUrl = window.location.href;

			if (LinkUrl.indexOf('#') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('#'));
			}
			if (LinkUrl.indexOf('?') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('?'));
			}

			cgi.myFavorites.toggleFavorites(
				encodeURIComponent(EnglishTitle),
				encodeURIComponent(FrenchTitle),
				encodeURIComponent(LinkUrl),
				LinkOrder,
				OpensInNewTab,
				currentObject,
				Tab
			);
		},
		FavoriteCurrentPageBrowseCGI: function () {
			var EnglishTitle = $('span.Browse-CGI-Landing-TitleEN-span').text().trim();
			var FrenchTitle = $('span.Browse-CGI-Landing-TitleFR-span').text().trim();
			if(!FrenchTitle){
				if(EnglishTitle){
					FrenchTitle=EnglishTitle;
				}
			}
			if(!EnglishTitle){
				if(FrenchTitle){
					EnglishTitle=FrenchTitle;
				}
			}
			var LinkOrder = 99;
			var Tab = 5;
			var currentObject = this;
			var OpensInNewTab = 0;
			var LinkUrl = window.location.href;

			if (LinkUrl.indexOf('#') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('#'));
			}
			if (LinkUrl.indexOf('?') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('?'));
			}

			cgi.myFavorites.toggleFavorites(
				encodeURIComponent(EnglishTitle),
				encodeURIComponent(FrenchTitle),
				encodeURIComponent(LinkUrl),
				LinkOrder,
				OpensInNewTab,
				currentObject,
				Tab
			);
		},
		FavoriteCurrentPageSolutions: function () {
			var EnglishTitle = $('span.Solutions-Landing-TitleEN-span').text().trim();
			var FrenchTitle = $('span.Solutions-Landing-TitleEN-span').text().trim();
			var LinkOrder = 99;
			var Tab = 6;
			var currentObject = this;
			var OpensInNewTab = 0;
			var LinkUrl = window.location.href;

			if (LinkUrl.indexOf('#') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('#'));
			}
			if (LinkUrl.indexOf('?') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('?'));
			}

			cgi.myFavorites.toggleFavorites(
				encodeURIComponent(EnglishTitle),
				encodeURIComponent(FrenchTitle),
				encodeURIComponent(LinkUrl),
				LinkOrder,
				OpensInNewTab,
				currentObject,
				Tab
			);
		},
		FavoriteCurrentPageBDKX: function () {
			var EnglishTitle = $('span.BDKX-Landing-TitleEN-span').text().trim();
			var FrenchTitle = $('span.BDKX-Landing-TitleFR-span').text().trim();
			var LinkOrder = 99;
			var Tab = 6;
			var currentObject = this;
			var OpensInNewTab = 0;
			var LinkUrl = window.location.href;

			if (LinkUrl.indexOf('#') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('#'));
			}
			if (LinkUrl.indexOf('?') >= 0) {
				LinkUrl = LinkUrl.substring(0, LinkUrl.indexOf('?'));
			}

			cgi.myFavorites.toggleFavorites(
				encodeURIComponent(EnglishTitle),
				encodeURIComponent(FrenchTitle),
				encodeURIComponent(LinkUrl),
				LinkOrder,
				OpensInNewTab,
				currentObject,
				Tab
			);
		},
		checkLinkTarget: function (item) {
			var targetString = '';
			if (item.OpensInNewTab) {
				targetString = 'target="_blank" rel="noopener"';
			} else {
				targetString = '';
			}
			return targetString;
		},
		openManageMode: function (e) {
			e.preventDefault();
			var shortcutInfo =
				'These links will display on your home page under “Shortcuts” after refreshing the page. A max of 10 shortcuts can be added to the homepage.';
			var exitFavLabel = 'Exit';
			var SRexitFavLabel = 'Exit Manage Favorites';
			if (preferredLanguage == 'FR') {
				shortcutInfo =
					"Ces liens afficheront sur votre page d'accueil sous la rubrique « Raccourcis » après avoir rafraîchi la page. Un maximum de 10 raccourcis peuvent être ajoutés à la page d'accueil.";
				exitFavLabel = 'Sortie';
				SRexitFavLabel = 'Quitter Gérer les favoris';
			}
			var manageBtnCloseHtml =
				'<p class="my-favorites-footer-msg text-muted"><em id="MyFavorites_Label_ShortcutInfo">' +
				shortcutInfo +
				'</em></p><button class="btn btn-primary" id="js-my-favorites-manage-close"><span class="fal fa-times mr-1" aria-hidden="true"></span><span aria-hidden="true">' +
				exitFavLabel +
				'</span><span class="sr-only">' +
				SRexitFavLabel +
				'</span></button>';

			// Add classes which control the display of management items based on which tab type it is
			$(cgi.myFavorites.favOffcanvas).addClass(
				'in-manage-mode home-manage section-manage'
			);

			// Update the "Manage Favorites" button
			$(cgi.myFavorites.manageBtnWrap).html(manageBtnCloseHtml);
			$(cgi.myFavorites.manageCloseBtnId).focus();
		},
		closeManageMode: function (e) {
			e.preventDefault();
			var manageFavLabel = 'Manage Favorites';
			if (preferredLanguage == 'FR') {
				manageFavLabel = 'Gérer les Favoris';
			}
			var manageBtnOpenHtml =
				'<button class="btn btn-outline-primary" id="js-my-favorites-manage-open"><span class="fal fa-pencil mr-1" aria-hidden="true"></span><span id="MyFavorites_Label_ManageFavorites">' +
				manageFavLabel +
				'</span></button>';

			// Remove classes which control the display of management items based on which tab type it is
			$(cgi.myFavorites.favOffcanvas).removeClass(
				'in-manage-mode section-manage home-manage'
			);

			// Update the "Manage Favorites" button
			$(cgi.myFavorites.manageBtnWrap).html(manageBtnOpenHtml);
		},
		openModal: function (modalCopy, buttonText) {
			var $modalCopy = $('#my-favorites-modal-copy');
			var $buttonText = $('#my-favorites-modal-btn');

			$modalCopy.html(modalCopy);
			$buttonText.html(buttonText);
			$('#my-favorites-modal').modal('show');
		},
		directlyManageClicked: function (e) {
			e.preventDefault();
			$('.nav-link[data-target="#my-favorites"]').click();
			cgi.myFavorites.openManageMode(e);
		},
		listeners: function () {
			$(document).on(
				'click',
				cgi.myFavorites.faveToggle,
				cgi.myFavorites.toggleFavorite
			);

			$(document).on(
				'click touchstart',
				'.my-favorite-toggle:not(.is-favorite)',
				function () {
					$(this).find('.fa-star').toggleClass('is-animating');
				}
			);

			$(document).on('animationend', cgi.myFavorites.faveToggle, function () {
				$(this).find('.fa-star').toggleClass('is-animating');
			});

			$(document).on(
				'click',
				cgi.myFavorites.manageOpenBtnId,
				cgi.myFavorites.openManageMode
			);

			$(document).on(
				'click',
				cgi.myFavorites.manageCloseBtnId,
				cgi.myFavorites.closeManageMode
			);

			$(document).on(
				'click',
				cgi.myFavorites.manageShortcutsLink,
				cgi.myFavorites.directlyManageClicked
			);
		},
		keybinding: function () {
			$(document).on('keypress', cgi.myFavorites.faveToggle, function (e) {
				var code = e.keyCode || e.which;
				if (code === 13) {
					e.preventDefault();
					$(this).click();
				}
			});

			$(document).on('keypress', cgi.myFavorites.manageOpenBtnId, function (e) {
				var code = e.keyCode || e.which;
				if (code === 13) {
					e.preventDefault();
					$(this).click();
				}
			});

			$(document).on('keypress', cgi.myFavorites.manageCloseBtnId, function (e) {
				var code = e.keyCode || e.which;
				if (code === 13) {
					e.preventDefault();
					$(this).click();
				}
			});

			$(document).on('keypress', cgi.myFavorites.manageShortcutsLink, function (
				e
			) {
				var code = e.keyCode || e.which;
				if (code === 13) {
					e.preventDefault();
					$(this).click();
				}
			});
		},
		BindDataToLinksDropDown: function () {
			var selectedValue = $('#home-add-new-form-category').val();
			var currentLinksData = cgi.myFavorites.FavoritesData.filter(function (x) {
				return x.LinkTab == selectedValue;
			});
			var options =
				'<option selected="" disabled="">Select Favorite Link</option>';
			// Populate the section tab links
			for (var j = 0; j < currentLinksData.length; j++) {
				var currentItem = currentLinksData[j];

				// Translate the current item's output
				var title = cgi.myFavorites.translateText(currentItem);
				var linkUrl = currentItem.Link;

				options +=
					'<option  data-English-Text="' +
					currentItem.EN_text +
					'" data-French-Text="' +
					currentItem.FR_text +
					'" data-OpensInNewTab="' +
					currentItem.OpensInNewTab +
					'" value="' +
					linkUrl +
					'">' +
					decodeURIComponent(title) +
					'</option>';
			}
			$('#home-add-new-form-link').html(options);
		},
		BindEventsToControls: function () {
			$('#home-shortcuts-select-cat').click(function () {
				cgi.myFavorites.BindDataToLinksDropDown();
			});
			$('#home-shortcuts-select-link').click(function () {
				var title = $('#home-add-new-form-link option:selected').text();
				var EnglishTitle = $('#home-add-new-form-link option:selected').attr(
					'data-English-Text'
				);
				var FrenchTitle = $('#home-add-new-form-link option:selected').attr(
					'data-French-Text'
				);
				var OpensInNewTab = $('#home-add-new-form-link option:selected').attr(
					'data-OpensInNewTab'
				);
				var Url = $('#home-add-new-form-link').val();
				var clickedEl = '';
				cgi.myFavorites.VerifyValidationsForShortcuts(
					clickedEl,
					title,
					EnglishTitle,
					FrenchTitle,
					OpensInNewTab,
					Url
				);
			});
		},
		VerifyValidationsForShortcuts: function (
			clickedEl,
			title,
			EnglishTitle,
			FrenchTitle,
			OpensInNewTab,
			Url
		) {
			// Url = decodeURIComponent(Url);
			// var listTitle = 'MyShortcuts';
			var webUrl = _spPageContextInfo.siteAbsoluteUrl;
			// var homeUrl =
			// webUrl +
			// "/_api/web/lists/getbytitle('" +
			// listTitle +
			// "')/items?$select=FR_text,EN_text,Link,ID,OpensInNewTab,LikesCount,LikedBy/Title,LikedBy/ID&$expand=LikedBy&$filter=(LikedBy/ID eq " +
			// _spPageContextInfo.userId +
			// ')&$orderby=DisplayOrder asc,ID desc&$top=15';

			listTitle = 'Admin Settings';
			var ShortcutsCountUrl =
				webUrl +
				"/_api/web/lists/getbytitle('" +
				listTitle +
				"')/items?$select=LinkTitle,SettingValue,ID&$filter=(Title eq 'Homepage_Number_Of_My_Shortcuts')";
			getItems(ShortcutsCountUrl).then(function (ShortcutsCountData) {
				var DisplayCount = 8;
				try {
					//DisplayTitle = items.d.results[0].EN_text;
					DisplayCount = parseInt(ShortcutsCountData.d.results[0].SettingValue);
				} catch (ex) {
					console.log(ex);
				}
				var CurrentShortcutsCount = cgi.myFavorites.ShortcutsData.length;

				if (CurrentShortcutsCount < DisplayCount) {
					cgi.myFavorites.addShortcuts(
						EnglishTitle,
						FrenchTitle,
						Url,
						CurrentShortcutsCount,
						OpensInNewTab,
						clickedEl
					);
				} else {
					// TODO: Different languages
					var copy =
						'Only ' + DisplayCount + ' items are allowed to be added to shortcuts.';
					var btn = 'Close';
					cgi.myFavorites.openModal(copy, btn);
				}
			});
		},
	
		getInitialLinks: function () {
			//Favorites Data
			var FavoritesData = [];
			var ProfileObject = {
				EN_text: encodeURIComponent('My Profile'),
				FR_text: encodeURIComponent('Mon profil'),
				Link: encodeURIComponent(
					_spPageContextInfo.siteAbsoluteUrl + '/pages/MyProfile.aspx'
				),
				LinkTab: 6,
				Order: 1,
				OpensInNewTab: 0,
			};
			FavoritesData.push(ProfileObject);
			var TimesheetsObject = {
				EN_text: encodeURIComponent('Timesheet: PSA Finance'),
				FR_text: encodeURIComponent('Feuille de Temps: PSA Finance'),
				Link: encodeURIComponent(
					'https://psa-fs.ent.cgi.com/psp/fsprda/?cmd=login'
				),
				LinkTab: 2,
				Order: 2,
				OpensInNewTab: 1,
			};
			FavoritesData.push(TimesheetsObject);
			var AnnualTourObject = {
				EN_text: encodeURIComponent('Annual Tour'),
				FR_text: encodeURIComponent('Tournée annuelle'),
				Link: encodeURIComponent(
					_spPageContextInfo.siteAbsoluteUrl +
						'/browse/strat/global/Pages/Annual-Tour.aspx'
				),
				LinkTab: 5,
				Order: 3,
				OpensInNewTab: 0,
			};
			FavoritesData.push(AnnualTourObject);
			var HelpDeskObject = {
				EN_text: encodeURIComponent('Global User Service Desk'),
				FR_text: encodeURIComponent('Bureau de services aux utilisateurs mondial'),
				Link: encodeURIComponent('https://gusd.cgi.com/'),
				LinkTab: 2,
				Order: 4,
				OpensInNewTab: 1,
			};
			FavoritesData.push(HelpDeskObject);
			var GlobalNewsObject = {
				EN_text: encodeURIComponent('Global News'),
				FR_text: encodeURIComponent('Nouvelles Mondiales'),
				Link: encodeURIComponent(
					_spPageContextInfo.siteAbsoluteUrl + '/news/global/pages/default.aspx'
				),
				LinkTab: 4,
				Order: 5,
				OpensInNewTab: 0,
			};
			FavoritesData.push(GlobalNewsObject);

			//Shortcuts Links
			var ShortcutsData = [];
			var ProfileObject = {
				EN_text: encodeURIComponent('My Profile'),
				FR_text: encodeURIComponent('Mon profil'),
				Link: encodeURIComponent(
					_spPageContextInfo.siteAbsoluteUrl + '/pages/MyProfile.aspx'
				),
				Order: 1,
				OpensInNewTab: 0,
			};
			ShortcutsData.push(ProfileObject);
			var TimesheetsObject = {
				EN_text: encodeURIComponent('Timesheet: PSA Finance'),
				FR_text: encodeURIComponent('Feuille de Temps: PSA Finance'),
				Link: encodeURIComponent(
					'https://psa-fs.ent.cgi.com/psp/fsprda/?cmd=login'
				),
				Order: 2,
				OpensInNewTab: 1,
			};
			ShortcutsData.push(TimesheetsObject);
			var AnnualTourObject = {
				EN_text: encodeURIComponent('Annual Tour'),
				FR_text: encodeURIComponent('Tournée annuelle'),
				Link: encodeURIComponent(
					_spPageContextInfo.siteAbsoluteUrl +
						'/browse/strat/global/Pages/Annual-Tour.aspx'
				),
				Order: 3,
				OpensInNewTab: 0,
			};
			ShortcutsData.push(AnnualTourObject);
			var HelpDeskObject = {
				EN_text: encodeURIComponent('Global User Service Desk'),
				FR_text: encodeURIComponent('Bureau de services aux utilisateurs mondial'),
				Link: encodeURIComponent('https://gusd.cgi.com/'),
				Order: 4,
				OpensInNewTab: 1,
			};
			ShortcutsData.push(HelpDeskObject);
			var GlobalNewsObject = {
				EN_text: encodeURIComponent('Global News'),
				FR_text: encodeURIComponent('Nouvelles Mondiales'),
				Link: encodeURIComponent(
					_spPageContextInfo.siteAbsoluteUrl + '/news/global/pages/default.aspx'
				),
				Order: 5,
				OpensInNewTab: 0,
			};
			ShortcutsData.push(GlobalNewsObject);

			var ListItemObject = {
				Favorites: JSON.stringify(FavoritesData),
				Shortcuts: JSON.stringify(ShortcutsData),
				LoginName: cgi.myFavorites.userLoginName.toLowerCase(),
			};
			ListItemObject['__metadata'] = {
				type: 'SP.Data.' + cgi.myFavorites.userListName + 'ListItem',
			};
			// console.log(ListItemObject);
			var itemProperties = ListItemObject;
			var webUrl = _spPageContextInfo.siteAbsoluteUrl;
			var listTitle = cgi.myFavorites.userListName;
			cgi.myFavorites
				.addItemToFavoritesList(webUrl, listTitle, itemProperties)
				.then(function (result) {
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentTimeCache, '');
					localStorage.setItem(cgi.myFavorites.GlobalFavoritesContentDataCache, '');
					cgi.myFavorites.getMyFavoritesData();
				});

				
				

		},
		GetUserBULink: function (UserBUData, userSBU, userBU) {
			var UserBULink = '';
			try {
				var currentObject = UserBUData[0].d.results;
				//var currentObject=UserSBUData[0].d.results.filter(function (x){return x.SBUTarget && x.BUTarget &&(x.SBUTarget.results.filter(function(y){return y.Label==userSBU}).length>0) && (x.BUTarget.Label==userBU)})
				UserBULink = currentObject[0].IntranetPageURL;
			} catch (ex) {
				console.log('Error Parsing User BU link Data');
				UserBULink =
					_spPageContextInfo.siteAbsoluteUrl + '/browse/pages/default.aspx';
			}
			return UserBULink;
		},
		GetUserSBULink: function (UserSBUData, userSBU) {
			var UserSBULink = '';
			try {
				var currentObject = UserSBUData[0].d.results.filter(function (x) {
					return (
						x.SBUTarget &&
						!x.BUTarget &&
						x.SBUTarget.results.filter(function (y) {
							return y.Label == userSBU;
						}).length > 0
					);
				});
				UserSBULink = currentObject[0].IntranetPageURL;
			} catch (ex) {
				console.log('Error Parsing User SBU link Data');
				UserSBULink =
					_spPageContextInfo.siteAbsoluteUrl + '/browse/pages/default.aspx';
			}
			return UserSBULink;
		},
		GetUserHRLink: function (UserHRData, userCountry, HRFunction) {
			var UserHRLink = '';
			try {
				var currentObject = UserHRData[0].d.results.filter(function (x) {
					return (
						x.Country.results.filter(function (y) {
							return y.Label == userCountry;
						}).length > 0 &&
						x.Function.results.filter(function (y) {
							return y.Label == HRFunction;
						}).length > 0
					);
				});
				UserHRLink = currentObject[0].IntranetPageURL;
			} catch (ex) {
				console.log("Error parsing user's HR link");
				UserHRLink =
					_spPageContextInfo.siteAbsoluteUrl + '/browse/pages/default.aspx';
			}
			return UserHRLink;
		},
		GetCalculatedChannelNewsLink: function (userChannelData) {
			var userChannelNewsLink = '';
			try {
				var results =
					userChannelData[0].d.query.PrimaryQueryResult.RelevantResults.Table.Rows
						.results;
				for (i = 0; i < results.length; i++) {
					var currentRow = results[i];
					var data = currentRow.Cells.results;
					if (data && data.length > 0) {
						var LinkObject = data.filter(function (x) {
							return x.Key == 'path';
						});
						if (LinkObject.length > 0) {
							var pathObject = LinkObject[0];
							var path = pathObject.Value + '/pages/default.aspx';
							userChannelNewsLink = path;
						}
					}
				}
			} catch (ex) {
				console.log('Error Parsing Initail Link user Channel search object');
			}
			if (!userChannelNewsLink) {
				var url = _spPageContextInfo.siteAbsoluteUrl;
				var subsiteLink = '/news/pages/default.aspx';
				var fullLink = url + subsiteLink;
				userChannelNewsLink = fullLink;
			}
			return userChannelNewsLink;
		},
		GetCalculatedChannelNewsData: function (Channel) {
			var url = _spPageContextInfo.siteAbsoluteUrl;
			var seachApi =
				"/_api/search/query?querytext='CGIChannel:" +
				Channel +
				"+FileName:default'&refinementfilters='ContentType:\"Intranet News Article\"'&rowlimit=5&selectproperties='CGIChannel,path,spweburl,parent'";
			var link = url + seachApi;
			return getItems(link);
		},
		GetGlobalNewsLink: function () {
			var url = _spPageContextInfo.siteAbsoluteUrl;
			var subsiteLink = '/news/global/pages/default.aspx';
			var fullLink = url + subsiteLink;
			return fullLink;
		},
		fixedEncodeURIComponent: function (src) {
			return encodeURIComponent(src).replace(/[']/g, function (c) {
				return (
					'%' + c.charCodeAt(0).toString(16) + '%' + c.charCodeAt(0).toString(16)
				);
			});
		},
	};

	function addItemTomissingpropertiesList() {
		var webUrl = _spPageContextInfo.webAbsoluteUrl;
		var listTitle = "Profiles missing properties";
		var Country=$("#divUPSIntranetCountry").text().trim();
		var calculatedSBU=$("#divUPCalculatedSBU").text().trim();
		var calculatedBU=$("#divUPCalculatedBU").text().trim();
		var harmonySBU=$("#divUPSSBUEnglishName").text().trim();
		var harmonyBU=$("#divUPSBUEnglishName").text().trim();
		var calculatedtitle=$("#divUPSIntranetCalculatedJobTitle").text().trim();
		var AdTitle = $("#divUPSIntranetTitle").text().trim();
		var OfficeCountry = $("#divUPSOfficeCountry").text().trim();
		var loginName = _spPageContextInfo.userLoginName.toLowerCase();  
		
	
		$.ajax
		({
		url:  webUrl+ "/_api/web/lists/GetByTitle('"+ listTitle +"')/items",
		type: "POST",
		headers:
		{
		"Accept": "application/json;odata=verbose",
		"Content-Type": "application/json;odata=verbose",
		"X-RequestDigest": $("#__REQUESTDIGEST").val()
		
		},
		data: JSON.stringify 
		({
		__metadata:
		{
		type: "SP.Data.MissingpropertiesListItem"
		},
		Title : loginName,
		HarmonyBU: harmonyBU,
		HarmonySBU: harmonySBU,
		ADTitle: AdTitle,	
		officeCountry: OfficeCountry,
		CalculatedSBU: calculatedSBU,
		CalculatedBU: calculatedBU,
		CalculatedTitle: calculatedtitle,
		CalculatedCountry: Country
		}),
		
		});	
		
		
	
	}

	



	

	